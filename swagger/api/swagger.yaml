openapi: 3.0.3
info:
  title: LiveData Migrator
  description: LiveData Migrator API Documentation
  version: 3.3.6
servers:
- url: http://liamg01-vm5.bdfrem.wandisco.com:18080/
tags:
- name: ADLS2 Source File System Controller
  description: Operations to Manage ADLS2 Source FileSystems
- name: Consumption Controller
  description: Operations to Manage Consumption
- name: ADLS2 Target File System Controller
  description: Operations to Manage ADLS2 Target FileSystems
- name: Statistics Controller
  description: Operations to show migration Stats
- name: Email Notification Controller
  description: LiveData Migrator Email Notifications
- name: Exclusions Controller
  description: Operations to Manage Exclusions while Running Migrations
- name: Threads Controller
  description: Status of Threads
- name: Path Mapping Controller
  description: Operations to Manage Path Mappings
- name: HDFS Source File System Controller
  description: Operations to Manage Source HDFS FileSystems
- name: Preview Feature Controller
  description: Operations to Manage Preview Features
- name: Files system health controller
  description: Operations to retrieve health status of file systems
- name: License Controller
  description: Operations to Manage Licenses
- name: Bandwidth Policy Controller
  description: Operations to Manage Bandwidth Policies
- name: HDFS Source File System Autodiscovery Controller
  description: Operations to autodiscover source HDFS FileSystems
- name: Source File System Controller
  description: Operations to Manage Source FileSystems
- name: Migration Gate Controller
  description: Operations to Manage Migration Gates
- name: Local Target File System Controller
  description: Operations to Manage Local Target FileSystems
- name: HDFS Target File System Controller
  description: Operations to Manage Target HDFS FileSystems
- name: S3a Target File System Controller
  description: Operations to Manage S3a Target FileSystems
- name: Backup and Restore Controller
  description: Provides a way to perform basic actions under a file system
- name: File System Controller
  description: Provides a way to perform basic actions under a file system
- name: S3a Source File System Controller
  description: Operations to Manage S3a Source FileSystems
- name: GCS Target File System Controller
  description: Operations to Manage GCS Target FileSystems
- name: Migration Controller
  description: Operations to Manage Migrations
- name: Local Source File System Controller
  description: Operations to Manage Source Local FileSystems
- name: Diagnostics Controller
  description: Operations to retrieve Diagnostics
- name: Metering Controller
  description: Operations to Manage Metered Licenses
- name: Notification Controller
  description: LiveData Migrator Notifications
- name: Target File System Controller
  description: Operations to Manage Target FileSystems
- name: Info Controller
  description: Information on running LiveData Migrator instance
- name: Migration Path Status Controller
  description: Operations to See the Status of Paths
- name: Configuration Controller
  description: Update system wide configurable properties
- name: Requeuing Actions Controller
  description: Operations to See the Status Requeuing Actions
- name: Backups Controller
  description: Operations to manage backups
- name: Verification Controller
  description: Operations to manage verifications
- name: Data Agents Controller
  description: Operations for scaling with Data Agents
- name: Data Agent Statistics Controller
  description: Operations to show Data Agent Stats
- name: Data Agent Diagnostics Controller
  description: Operations to retrieve only Agent Diagnostics
- name: Source Cleanup Controller
  description: Operations to manage Source Cleanup
- name: GCS Source File System Controller
  description: Operations to Manage GCS Source FileSystems
paths:
  /info:
    get:
      tags:
      - Info Controller
      summary: Get information on LiveData Migrator instance
      operationId: getVersion
      responses:
        "200":
          description: LiveData Migrator information
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Info Controller
  /info/nodeID:
    get:
      tags:
      - Info Controller
      summary: Get LiveData Migrator Node ID
      operationId: getNodeId
      responses:
        "200":
          description: LiveData Migrator ID Returned
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-accepts: text/plain
  /notifications:
    get:
      tags:
      - Notification Controller
      summary: Notifications
      operationId: fetchNotifications
      parameters:
      - name: count
        in: query
        description: Limit number of Notifications returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: since
        in: query
        description: |-
          If a notification's last modification time is earlier than this, it will be excluded.
          + "Expects the ISO format e.g. \"2020-02-03T10:15:05-05:00\".
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: type
        in: query
        description: If this parameter is supplied only notifications of the given
          type will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: excludeResolved
        in: query
        description: Exclude notifications which have been marked resolved (default
          false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: level
        in: query
        description: If this parameter is supplied only notifications of the given
          level will be returned.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NotificationLevel'
      responses:
        "200":
          description: Notifications retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
                x-content-type: application/json
        "304":
          description: Notifications not changed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
                x-content-type: application/json
      x-accepts: application/json
  /notifications/atom:
    get:
      tags:
      - Notification Controller
      summary: Get Atom feed for Notifications
      operationId: atom
      responses:
        "200":
          description: Notification Atom feed retrieved successfully
          content:
            application/atom+xml:
              schema:
                type: object
                x-content-type: application/atom+xml
        "304":
          description: Notifications not changed.
          content: {}
      x-accepts: application/atom+xml
  /notifications/{notificationId}:
    get:
      tags:
      - Notification Controller
      summary: Get a Notification
      operationId: fetchNotification
      parameters:
      - name: notificationId
        in: path
        description: Identifier for Notification
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Notification retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        "404":
          description: No Notification found for the given notificationId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationNotFound'
  /notifications/config/email:
    get:
      tags:
      - Email Notification Controller
      summary: Get the current SMTP adaptor config
      operationId: fetchSmtpConfig
      responses:
        "200":
          description: SMTP adaptor config retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmtpConfiguration'
    put:
      tags:
      - Email Notification Controller
      summary: Update the SMTP adaptor config
      operationId: setSmtpConfig
      parameters:
      - name: host
        in: query
        description: Host of the SMTP server
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: port
        in: query
        description: Port of the SMTP server
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: securityType
        in: query
        description: Security type of the SMTP server
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SmtpSecurityType'
      - name: email
        in: query
        description: Email that will be used by notification sender
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: authEnabled
        in: query
        description: Authentication is enabled
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: login
        in: query
        description: Login
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: password
        in: query
        description: Password
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: subjectPrefix
        in: query
        description: E-Mail subject prefix
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: SMTP adaptor config updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmtpConfiguration'
        "400":
          description: Host is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmtpConfiguration'
      x-accepts: application/json
  /notifications/config/email/registration:
    get:
      tags:
      - Email Notification Controller
      summary: Get registered email address for receiving push notifications about
        specific notification types
      operationId: fetchEmailRegistrations
      responses:
        "200":
          description: Email registrations retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailRegistrations'
      x-accepts: application/json
    put:
      tags:
      - Email Notification Controller
      summary: Update set of emails registered for receiving push notifications about
        specific notification types
      operationId: setEmailRegistrations
      parameters:
      - name: types
        in: query
        description: Types of notifications
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
          default: []
      - name: addresses
        in: query
        description: Emails of receivers
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
          default: []
      responses:
        "200":
          description: Email registrations updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailRegistrations'
        "400":
          description: Notification type is not email.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailRegistrations'
      x-accepts: application/json
  /notifications/config/email/test:
    post:
      tags:
      - Email Notification Controller
      summary: Send test e-mail to the specified list of recipient
      operationId: sendTestEmail
      parameters:
      - name: addresses
        in: query
        description: Emails of receivers
        required: true
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: Test e-mail was successfully sent
        "400":
          description: Failed to send test e-mail
      x-accepts: application/json
  /notifications/config/email/types:
    get:
      tags:
      - Email Notification Controller
      summary: Get email notifications types
      operationId: fetchEmailNotificationTypes
      responses:
        "200":
          description: Email notifications types retrieved successfully
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
                x-content-type: application/json
      x-accepts: application/json
  /gates/gate:
    get:
      tags:
      - Migration Gate Controller
      summary: Check status of a gate by its ID
      operationId: getMigrationGates
      parameters:
      - name: gateIds
        in: query
        description: Gate ID
        required: true
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: Gate returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MigrationGate'
                x-content-type: application/json
        "404":
          description: Gate not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      deprecated: true
      x-accepts: application/json
    put:
      tags:
      - Migration Gate Controller
      summary: Request a gate on a given migration by path
      operationId: createMigrationGate
      parameters:
      - name: path
        in: query
        description: Path of the Migration gate
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: sourceFilesystemId
        in: query
        description: ID of the source Filesystem
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: targetFilesystemId
        in: query
        description: ID of the target Filesystem
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gateId
        in: query
        description: Gate ID
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Gate created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationGate'
        "400":
          description: Failed to create gate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
    delete:
      tags:
      - Migration Gate Controller
      summary: Delete a Gate by its ID
      operationId: deleteMigrationGates
      parameters:
      - name: gateIds
        in: query
        description: Gate IDs
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Gate deleted
        "404":
          description: Gate not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: Gate cannot be deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      deprecated: true
      x-accepts: application/json
  /gates/gate/bulk:
    post:
      tags:
      - Migration Gate Controller
      summary: Check status of a number of gates by their ID's
      operationId: getBulkMigrationGates
      requestBody:
        description: Gate IDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationGateIds'
        required: true
      responses:
        "200":
          description: Gates returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MigrationGate'
                x-content-type: application/json
        "404":
          description: Gate not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /gates/gate/bulk/delete:
    post:
      tags:
      - Migration Gate Controller
      summary: Bulk delete migration gates by their ID's
      operationId: deleteBulkMigrationGates
      requestBody:
        description: Gate IDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationGateIds'
        required: true
      responses:
        "200":
          description: Gate(s) deleted
        "404":
          description: Gate not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: Gate cannot be deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /gates/gate/deleteAll:
    delete:
      tags:
      - Migration Gate Controller
      summary: Delete all Migration Gates
      operationId: deleteAllMigrationGates
      responses:
        "200":
          description: Gate deleted
      x-accepts: application/json
  /gates/gate/check:
    get:
      tags:
      - Migration Gate Controller
      summary: Check for closed Gates in bulk
      operationId: checkClosedGates
      parameters:
      - name: gateIds
        in: query
        description: Gate ID
        required: true
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: Gate returned
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "404":
          description: Gate not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      deprecated: true
      x-accepts: application/json
  /gates/gate/bulk/check:
    post:
      tags:
      - Migration Gate Controller
      summary: Bulk check for closed Gates by their ID's
      operationId: bulkCheckClosedGates
      requestBody:
        description: Gate IDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationGateIds'
        required: true
      responses:
        "200":
          description: Gates returned
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "404":
          description: Gate not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /gates/gate/close:
    put:
      tags:
      - Migration Gate Controller
      summary: Close a Gate by its ID
      operationId: closeMigrationGate
      parameters:
      - name: gateId
        in: query
        description: Gate ID
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Gate closed
        "404":
          description: Gate not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /threads:
    get:
      tags:
      - Threads Controller
      summary: Get Thread Dump
      operationId: fetchThreadDump
      responses:
        "200":
          description: Thread Dump
          content:
            '*/*':
              schema:
                type: string
                x-content-type: '*/*'
  /threads/states:
    get:
      tags:
      - Threads Controller
      summary: Get Thread State Summary
      operationId: fetchThreadStates
      responses:
        "200":
          description: Thread States
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadStates'
  /migration-path-status:
    get:
      tags:
      - Migration Path Status Controller
      summary: Displays information on a path in a current migration.
      operationId: getPathStatus
      parameters:
      - name: path
        in: query
        description: Path on source filesystem.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: sourceId
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Path found in migration on given source.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationPathStatus'
        "404":
          description: No migration was found matching this source id and path
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationPathStatus'
      x-accepts: application/json
  /preview:
    get:
      tags:
      - Preview Feature Controller
      summary: Get all preview features
      operationId: getPreviewFeatureStatus
      responses:
        "200":
          description: Preview feature status retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewInfo'
      x-accepts: application/json
  /consumption/switchToConsumption:
    put:
      tags:
      - Consumption Controller
      summary: 'Change license type to consumption '
      operationId: switchToConsumption
      responses:
        "200":
          description: Switch to consumption license
      x-accepts: application/json
  /consumption/extendTime:
    put:
      tags:
      - Consumption Controller
      summary: 'Extend consumption license expiry time '
      operationId: extendLicense
      parameters:
      - name: token
        in: query
        description: Token used to extend license
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Extend license expiry time
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "403":
          description: Incorrect token provided
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
      x-accepts: application/json
  /bandwidthPolicies/application:
    get:
      tags:
      - Bandwidth Policy Controller
      summary: Get the application's bandwidth policy
      operationId: getApplicationBandwidthPolicy
      responses:
        "200":
          description: Policy retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BandwidthPolicy'
      x-accepts: application/json
    post:
      tags:
      - Bandwidth Policy Controller
      summary: Set the application's bandwidth policy. A limit of -1 will mean no
        bandwidth limit is imposed.
      operationId: updateApplicationBandwidthPolicy
      parameters:
      - name: limit
        in: query
        description: Overall application bandwidth limit to apply.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: unit
        in: query
        description: Unit of bandwidth - bytes per second
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/FileSizeUnit'
      responses:
        "200":
          description: Bandwidth policy set successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BandwidthPolicy'
        "400":
          description: Missing or bad parameter 'limit' or 'unit'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "412":
          description: Unrecognised value for 'unit' supplied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
    delete:
      tags:
      - Bandwidth Policy Controller
      summary: "Restore default, unlimited application bandwidth policy"
      operationId: resetApplicationBandwidthPolicy
      responses:
        "200":
          description: Default application bandwidth policy restored.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BandwidthPolicy'
      x-accepts: application/json
  /fs/targets/s3a/{fileSystemId}:
    post:
      tags:
      - S3a Target File System Controller
      summary: Add a new target S3a file system
      operationId: addTargetS3aFileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: S3A file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3aFilesystemProperties'
        required: true
      responses:
        "201":
          description: filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration values
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
    patch:
      tags:
      - S3a Target File System Controller
      summary: Update a target S3a file system
      operationId: updateTargetS3aFileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: S3A file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3aFilesystemProperties'
        required: true
      responses:
        "200":
          description: filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: filesystemId defined against filesystem of incompatible type
            for this method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration values
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
  /fs/sources/s3a/{fileSystemId}:
    post:
      tags:
      - S3a Source File System Controller
      summary: Add a new source S3a file system
      operationId: addSourceS3aFileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      - name: scanOnly
        in: query
        description: Scan-only will not pick up any changes to the underlying filesystem
          during migrations
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: S3A file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3aFilesystemProperties'
        required: true
      responses:
        "201":
          description: filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration values
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
    patch:
      tags:
      - S3a Source File System Controller
      summary: Update a source S3a file system
      operationId: updateSourceS3aFileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: S3A file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3aFilesystemProperties'
        required: true
      responses:
        "200":
          description: filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: filesystemId defined against filesystem of incompatible type
            for this method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration values
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
  /exclusions/regex/{id}:
    put:
      tags:
      - Exclusions Controller
      summary: Add a new regex exclusion
      operationId: addRegexExclusion
      parameters:
      - name: id
        in: path
        description: ID of the exclusion to create
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: description
        in: query
        description: Description of the exclusion to create
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: patternType
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - JAVA_PCRE
          - AUTOMATA
          - GLOB
          default: JAVA_PCRE
      - name: regex
        in: query
        description: "Regex string, if a file's name matches, it will be excluded\
          \ from migration"
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Regex Exclusion added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exclusion'
        "400":
          description: "Missing or bad  parameter 'id', 'description' or 'regex'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "412":
          description: Unrecognised value for 'patternType' supplied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: Duplicate id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /exclusions/fileSize/{id}:
    put:
      tags:
      - Exclusions Controller
      summary: Add a new file size exclusion
      operationId: addFileSizeExclusion
      parameters:
      - name: id
        in: path
        description: ID of the exclusion to create
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: description
        in: query
        description: Description of the exclusion to create
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: value
        in: query
        description: "File size, if greater, file will be excluded from migration"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: unit
        in: query
        description: Unit of file size
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/FileSizeUnit'
      responses:
        "201":
          description: File Size Exclusion added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exclusion'
        "400":
          description: Missing or bad parameter 'id' or 'description'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: Duplicate id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /exclusions/date/{id}:
    put:
      tags:
      - Exclusions Controller
      summary: Add a new date-based exclusion
      operationId: addDateExclusion
      parameters:
      - name: id
        in: path
        description: ID of the exclusion to create
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: description
        in: query
        description: Description of the exclusion to create
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: beforeIsoDateTime
        in: query
        description: "If a file's modification time is earlier than this, it will\
          \ be excluded from migration. Expects the ISO format e.g. \"2020-02-03T10:15:05-05:00\"\
          ."
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "201":
          description: Date Exclusion added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exclusion'
        "400":
          description: Missing or bad parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: Duplicate id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /exclusions/{exclusionId}:
    get:
      tags:
      - Exclusions Controller
      summary: Get exclusion for given exclusion ID
      operationId: getExclusion
      parameters:
      - name: exclusionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Exclusion retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exclusion'
        "404":
          description: No exclusion found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
    delete:
      tags:
      - Exclusions Controller
      summary: Delete exclusion for given ID
      operationId: removeExclusion
      parameters:
      - name: exclusionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Exclusion deleted successfully
        "403":
          description: Default exclusions can not be deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedToDeleteExclusionException'
        "404":
          description: No exclusion found for given ID
      x-accepts: application/json
  /exclusions/userDefined:
    get:
      tags:
      - Exclusions Controller
      summary: Get all user defined exclusions
      operationId: listUserDefinedExclusions
      responses:
        "200":
          description: Exclusions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Exclusion'
                x-content-type: application/json
      x-accepts: application/json
  /exclusions/target/{fsType}:
    get:
      tags:
      - Exclusions Controller
      summary: See the restrictions applied automatically for the given target filesystem
      operationId: getFsRestrictions
      parameters:
      - name: fsType
        in: path
        description: Filesystem type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Restrictions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Exclusion'
                x-content-type: application/json
        "400":
          description: Invalid filesystem type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /exclusions/source/{fsType}:
    get:
      tags:
      - Exclusions Controller
      summary: See the restrictions applied automatically for the given source filesystem
      operationId: getSourceFsRestrictions
      parameters:
      - name: fsType
        in: path
        description: Filesystem type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Restrictions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Exclusion'
                x-content-type: application/json
        "400":
          description: Invalid filesystem type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /exclusions/global:
    get:
      tags:
      - Exclusions Controller
      summary: Get all global exclusions
      operationId: listGlobalExclusions
      responses:
        "200":
          description: Exclusions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Exclusion'
                x-content-type: application/json
      x-accepts: application/json
  /exclusions:
    get:
      tags:
      - Exclusions Controller
      summary: Get all exclusions
      operationId: listExclusions
      responses:
        "200":
          description: Exclusions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Exclusion'
                x-content-type: application/json
      x-accepts: application/json
  /fs/sources/local/{fileSystemId}:
    post:
      tags:
      - Local Source File System Controller
      summary: Add a new Local source file system
      operationId: addSourceLocalFileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scanOnly
        in: query
        description: "Scan-only is the only configuration supported for this type\
          \ of source. If a value of 'false' is supplied for this parameter, it will\
          \ be ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Local file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalFilesystemProperties'
        required: true
      responses:
        "201":
          description: filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
    patch:
      tags:
      - Local Source File System Controller
      summary: Update a Local source file system
      operationId: updateSourceLocalFileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Local file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalFilesystemProperties'
        required: true
      responses:
        "200":
          description: filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: filesystemId defined against filesystem of incompatible configuration
            for this method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
  /fs/targets/local/{fileSystemId}:
    post:
      tags:
      - Local Target File System Controller
      summary: Add a new target Local file system
      operationId: addTargetLocalFileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Local file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalFilesystemProperties'
        required: true
      responses:
        "201":
          description: filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
    patch:
      tags:
      - Local Target File System Controller
      summary: Update a target Local file system
      operationId: updateTargetLocalFileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Local file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalFilesystemProperties'
        required: true
      responses:
        "200":
          description: filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: filesystemId defined against filesystem of incompatible configuration
            for this method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
  /stats:
    get:
      tags:
      - Statistics Controller
      summary: Get rolling stats over time for all migrations
      operationId: fetchTotalRollingStats
      responses:
        "200":
          description: Migration stats retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AllMigrationsRollingStats'
                x-content-type: application/json
      x-accepts: application/json
  /stats/{migrationId}:
    get:
      tags:
      - Statistics Controller
      summary: Get Stats over time for given migration ID
      operationId: fetchMigrationStats
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Migration stats retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MigrationRecord'
                x-content-type: application/json
        "404":
          description: No migration found for the given migration ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /stats/throughputSummary:
    get:
      tags:
      - Statistics Controller
      summary: Get throughput summary
      operationId: fetchThroughputSummary
      responses:
        "200":
          description: Throughput summary retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSummary'
      x-accepts: application/json
  /stats/throughputInLastSecs/{nSecs}:
    get:
      tags:
      - Statistics Controller
      summary: Get throughput stats for all migrations during last N seconds
      operationId: fetchThroughputInLastSecs
      parameters:
      - name: nSecs
        in: path
        description: Number of seconds to check
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Throughput stats retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputBucket'
      x-accepts: application/json
  /stats/migrationSummary:
    get:
      tags:
      - Statistics Controller
      summary: Get migrations summary
      operationId: fetchMigrationSummary
      responses:
        "200":
          description: Migration summary retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationsSummary'
      x-accepts: application/json
  /stats/migrationInfo/{migrationId}:
    get:
      tags:
      - Statistics Controller
      summary: Get stats information for the given migration ID
      operationId: fetchMigrationInfo
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Migration information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationInfo'
        "404":
          description: No migration found for the given migration ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /stats/filetrackers/fileTransferRates:
    get:
      tags:
      - Statistics Controller
      summary: Get File Transfer Rates Distribution.
      operationId: fetchFileTransferRatesDistribution
      parameters:
      - name: range
        in: query
        description: Percentile range
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 10
      - name: migrationId
        in: query
        description: Migration Id
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: File Transfer Rates Distribution retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileTrackerPercentiles'
      x-accepts: application/json
  /stats/filetrackers/fileSizes:
    get:
      tags:
      - Statistics Controller
      summary: Get Transferred File Size Distribution.
      operationId: fetchFileSizeDistribution
      parameters:
      - name: range
        in: query
        description: Percentile range
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 10
      - name: migrationId
        in: query
        description: Migration Id
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: File Size Distribution retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileTrackerPercentiles'
      x-accepts: application/json
  /stats/filetrackers/complete:
    get:
      tags:
      - Statistics Controller
      summary: Get File Trackers for Completed Transfers.
      operationId: fetchDiagnosticsComplete
      responses:
        "200":
          description: File Trackers retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileTracker'
                x-content-type: application/json
      x-accepts: application/json
  /stats/filetrackers/active/{progressId}/buckets:
    get:
      tags:
      - Statistics Controller
      summary: Get File Tracker Bytes per Second Buckets
      operationId: fetchDiagnosticsActiveIdBuckets
      parameters:
      - name: progressId
        in: path
        description: Identifier for File Tracker
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: File Progress Tracker buckets retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileTrackerBucket'
                x-content-type: application/json
      x-accepts: application/json
  /stats/filetrackers/active/{progressId}:
    get:
      tags:
      - Statistics Controller
      summary: Get File Tracker for an active transfer
      operationId: fetchDiagnosticsActiveId
      parameters:
      - name: progressId
        in: path
        description: Identifier for File Tracker
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: File Tracker retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileTracker'
      x-accepts: application/json
  /stats/filetrackers/active/fileTransferRates:
    get:
      tags:
      - Statistics Controller
      summary: Get Active File Transfer Rates Distribution.
      operationId: fetchFileTransferRatesDistributionActive
      parameters:
      - name: range
        in: query
        description: Percentile range
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 10
      - name: migrationId
        in: query
        description: Migration Id
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: File Transfer Rates Distribution retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileTrackerPercentiles'
      x-accepts: application/json
  /stats/filetrackers/active/fileSizes:
    get:
      tags:
      - Statistics Controller
      summary: Get Active Transfer File Size Distribution.
      operationId: fetchFileSizeDistributionActive
      parameters:
      - name: range
        in: query
        description: Percentile range
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 10
      - name: migrationId
        in: query
        description: Migration Id
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: File Size Distribution retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileTrackerPercentiles'
      x-accepts: application/json
  /stats/filetrackers/active:
    get:
      tags:
      - Statistics Controller
      summary: Get File Trackers for active transfers
      operationId: fetchDiagnosticsActive
      responses:
        "200":
          description: File Progress Trackers retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileTracker'
                x-content-type: application/json
      x-accepts: application/json
  /stats/filetrackers:
    get:
      tags:
      - Statistics Controller
      summary: Get File Trackers
      operationId: fetchDiagnostics
      responses:
        "200":
          description: File Trackers retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileTracker'
                x-content-type: application/json
      x-accepts: application/json
  /stats/excludedEvents:
    get:
      tags:
      - Statistics Controller
      summary: Get most recent 1000 excluded events.
      operationId: lastExcludedEvents
      responses:
        "200":
          description: Events retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnrichedMigratorEvent'
                x-content-type: application/json
      x-accepts: application/json
  /stats/current/{migrationId}:
    get:
      tags:
      - Statistics Controller
      summary: Get current Stats for given migration ID
      operationId: fetchCurrentMigrationStats
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Migration stats retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationRecord'
        "404":
          description: No migration found for the given migration ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /stats/current:
    get:
      tags:
      - Statistics Controller
      summary: Get current Stats for all migrations
      operationId: fetchAllCurrentMigrationStats
      responses:
        "200":
          description: Migration stats retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MigrationRecord'
                x-content-type: application/json
  /stats/cumulative:
    get:
      tags:
      - Statistics Controller
      summary: Get cumulative total stats for all migrations
      operationId: fetchTotalStats
      responses:
        "200":
          description: Migration stats retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationStats'
      x-accepts: application/json
  /stats/dta/:
    get:
      tags:
      - Data Agent Statistics Controller
      summary: Get full stats over all time for all Data Agents
      operationId: getDtaStatsList
      responses:
        "200":
          description: Overall agents stats retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OverallDataAgentStatsHistory'
      x-accepts: application/json
  /stats/dta/{agentName}:
    get:
      tags:
      - Data Agent Statistics Controller
      summary: Get full stats over for given Data Agent
      operationId: getDtaStats
      parameters:
      - name: agentName
        in: path
        description: User-defined name of the Data Agent
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Agent stats retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAgentStatsHistory'
        "404":
          description: "Either no Data Agent found for the given agent name, or no\
            \ statistics present for the given Data Agent"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /stats/dta/{agentName}/summary:
    get:
      tags:
      - Data Agent Statistics Controller
      summary: Get summary stats for given Data Agent
      operationId: getDtaStatsSummary
      parameters:
      - name: agentName
        in: path
        description: User-defined name of the Data Agent
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Agent stats retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAgentStatsSummary'
        "404":
          description: No Data Agent found for the given agent name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /transformations/mappings:
    get:
      tags:
      - Path Mapping Controller
      summary: Get all Mappings
      operationId: fetchAll
      parameters:
      - name: sourceFileSystemName
        in: query
        description: Name of the source file system.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: targetFileSystemName
        in: query
        description: Name of the target file system.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Mappings retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PathMapping'
                x-content-type: application/json
      x-accepts: application/json
    put:
      tags:
      - Path Mapping Controller
      summary: Create a Mapping
      operationId: createMapping
      parameters:
      - name: pathMappingId
        in: query
        description: Mapping id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: description
        in: query
        description: Mapping description
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sourceFileSystem
        in: query
        description: Name of source file system
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: sourcePath
        in: query
        description: Path of source file system
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: targetFileSystem
        in: query
        description: Name of target file system
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: targetPath
        in: query
        description: Path of target file system
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Mapping created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathMapping'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: Path Mapping overlap conflict with existing Mapping
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Can't retrieve filesystem from storage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /transformations/mappings/{id}:
    get:
      tags:
      - Path Mapping Controller
      summary: Fetch a Mapping
      operationId: fetchMapping
      parameters:
      - name: id
        in: path
        description: Identifier for mapping
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Mapping retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathMapping'
        "404":
          description: No Mapping found for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
    delete:
      tags:
      - Path Mapping Controller
      summary: Delete a Mapping
      operationId: delete
      parameters:
      - name: id
        in: path
        description: Identifier for mapping
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Mapping deleted successfully
        "404":
          description: No Mapping found for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathMappingNotFoundException'
      x-accepts: application/json
  /fs/sources/adls2/oauth2/{fileSystemId}:
    post:
      tags:
      - ADLS2 Source File System Controller
      summary: Add a new source ADLS2 file system with service principal and OAuth
        2.0 authentication
      operationId: addAdls2SourceFileSystemServicePrincipal
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Source file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adls2ServicePrincipalFilesystemProperties'
        required: true
      responses:
        "201":
          description: Source filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
    patch:
      tags:
      - ADLS2 Source File System Controller
      summary: Update a source ADLS2 file system with service principal and OAuth
        2.0 authentication
      operationId: updateAdls2SourceFileSystemServicePrincipal
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Source file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adls2ServicePrincipalFilesystemProperties'
        required: true
      responses:
        "200":
          description: Source filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: filesystemId defined against filesystem of incompatible configuration
            for this method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
  /fs/sources/adls2/shared-key/{fileSystemId}:
    post:
      tags:
      - ADLS2 Source File System Controller
      summary: Add a Adls2 file system With shared key authentication
      operationId: addSourceAdls2FileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adls2SharedKeyFilesystemProperties'
        required: true
      responses:
        "201":
          description: filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
    patch:
      tags:
      - ADLS2 Source File System Controller
      summary: Update a Adls2 file system With shared key authentication
      operationId: updateSourceAdls2FileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adls2SharedKeyFilesystemProperties'
        required: true
      responses:
        "200":
          description: filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
  /fs/targets/adls2/oauth2/{fileSystemId}:
    post:
      tags:
      - ADLS2 Target File System Controller
      summary: Add a new target ADLS2 file system with service principal and OAuth
        2.0 authentication
      operationId: addAdls2FileSystemServicePrincipal
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Target file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adls2ServicePrincipalFilesystemProperties'
        required: true
      responses:
        "201":
          description: Target filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
    patch:
      tags:
      - ADLS2 Target File System Controller
      summary: Update a target ADLS2 file system with service principal and OAuth
        2.0 authentication
      operationId: updateAdls2FileSystemServicePrincipal
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Target file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adls2ServicePrincipalFilesystemProperties'
        required: true
      responses:
        "200":
          description: Target filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: filesystemId defined against filesystem of incompatible configuration
            for this method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
  /fs/targets/adls2/shared-key/{fileSystemId}:
    post:
      tags:
      - ADLS2 Target File System Controller
      summary: Add a new target ADLS2 file system with Shared Key authentication
      operationId: addAdls2FileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Target file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adls2SharedKeyFilesystemProperties'
        required: true
      responses:
        "201":
          description: Target filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
    patch:
      tags:
      - ADLS2 Target File System Controller
      summary: Update a target ADLS2 file system with Shared Key authentication
      operationId: updateAdls2FileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Target file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adls2SharedKeyFilesystemProperties'
        required: true
      responses:
        "200":
          description: Target filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: filesystemId defined against filesystem of incompatible configuration
            for this method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
  /fs/sources/hdfs/{fileSystemId}:
    post:
      tags:
      - HDFS Source File System Controller
      summary: Add a new Hadoop source file system
      operationId: addSourceHdfsFileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      - name: scanOnly
        in: query
        description: Scan-only will not pick up any changes to the underlying filesystem
          during migrations
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Source file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HdfsFilesystemProperties'
        required: true
      responses:
        "201":
          description: filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "401":
          description: Filesystem credentials provided are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: Filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
    patch:
      tags:
      - HDFS Source File System Controller
      summary: Update a Hadoop source file system
      operationId: updateSourceHdfsFileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Source file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HdfsFilesystemProperties'
        required: true
      responses:
        "200":
          description: Filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "401":
          description: Filesystem credentials provided are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: Filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: filesystemId defined against filesystem of incompatible configuration
            for this method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update filesystem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
  /fs/health/{fsId}:
    get:
      tags:
      - Files system health controller
      summary: Get health status for given ID
      operationId: getHealthStatus
      parameters:
      - name: fsId
        in: path
        description: Unique identifier of the source filesystem
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Health status retrieved successfully for the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemHealthStatus'
        "404":
          description: Health status not found for the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /fs/health:
    get:
      tags:
      - Files system health controller
      summary: List health statues for all filesystems
      operationId: listHealthStatuses
      responses:
        "200":
          description: Health statuses retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileSystemHealthStatus'
                x-content-type: application/json
      x-accepts: application/json
  /fs/targets/gcs/{fileSystemId}:
    post:
      tags:
      - GCS Target File System Controller
      summary: Add a new target GCS file system
      operationId: addTargetGcsFileSystemDefault
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Target file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GcsFilesystemProperties'
        required: true
      responses:
        "201":
          description: Target filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
    patch:
      tags:
      - GCS Target File System Controller
      summary: Update a target GCS file system
      operationId: updateTargetGcsFileSystemDefault
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Target file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GcsFilesystemProperties'
        required: true
      responses:
        "200":
          description: Target filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: filesystemId defined against filesystem of incompatible configuration
            for this method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
  /fs/targets/gcs/keyfiles/p12/{fileSystemId}:
    post:
      tags:
      - GCS Target File System Controller
      summary: Add a new target GCS file system with credentials uploaded via P12
        key file
      operationId: addTargetGcsFileSystemP12KeyFile
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartGcsWithP12KeyFileBody'
      responses:
        "201":
          description: Target filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: multipart/form-data
      x-accepts: application/json
    patch:
      tags:
      - GCS Target File System Controller
      summary: Update a target GCS file system with credentials uploaded via P12 key
        file
      operationId: updateTargetGcsFileSystemP12KeyFile
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartGcsWithP12KeyFileBody'
      responses:
        "200":
          description: Target filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: filesystemId defined against filesystem of incompatible configuration
            for this method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: multipart/form-data
      x-accepts: application/json
  /fs/targets/gcs/keyfiles/json/{fileSystemId}:
    post:
      tags:
      - GCS Target File System Controller
      summary: Add a new target GCS file system with credentials uploaded with JSON
        key file
      operationId: addTargetGcsFileSystemJsonKeyFile
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartGcsWithJsonKeyBody'
      responses:
        "201":
          description: Target filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: multipart/form-data
      x-accepts: application/json
    patch:
      tags:
      - GCS Target File System Controller
      summary: Update a target GCS file system with credentials uploaded with JSON
        key file
      operationId: updateTargetGcsFileSystemJsonKeyFile
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartGcsWithJsonKeyBody'
      responses:
        "200":
          description: Target filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: filesystemId defined against filesystem of incompatible configuration
            for this method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: multipart/form-data
      x-accepts: application/json
  /fs/sources/gcs/{fileSystemId}:
    post:
      tags:
      - GCS Source File System Controller
      summary: Add a new source GCS file system
      operationId: addSourceGcsFileSystemDefault
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Source file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GcsFilesystemProperties'
        required: true
      responses:
        "201":
          description: Source filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
    patch:
      tags:
      - GCS Source File System Controller
      summary: Update a source GCS file system
      operationId: updateSourceGcsFileSystemDefault
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Source file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GcsFilesystemProperties'
        required: true
      responses:
        "200":
          description: Source filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: filesystemId defined against filesystem of incompatible configuration
            for this method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
  /fs/sources/gcs/keyfiles/p12/{fileSystemId}:
    post:
      tags:
      - GCS Source File System Controller
      summary: Add a new source GCS file system with credentials uploaded via P12
        key file
      operationId: addSourceGcsFileSystemP12KeyFile
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartGcsWithP12KeyFileBody'
      responses:
        "201":
          description: Source filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: multipart/form-data
      x-accepts: application/json
    patch:
      tags:
      - GCS Source File System Controller
      summary: Update a source GCS file system with credentials uploaded via P12 key
        file
      operationId: updateSourceGcsFileSystemP12KeyFile
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartGcsWithP12KeyFileBody'
      responses:
        "200":
          description: Source filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: filesystemId defined against filesystem of incompatible configuration
            for this method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: multipart/form-data
      x-accepts: application/json
  /fs/sources/gcs/keyfiles/json/{fileSystemId}:
    post:
      tags:
      - GCS Source File System Controller
      summary: Add a new source GCS file system with credentials uploaded with JSON
        key file
      operationId: addSourceGcsFileSystemJsonKeyFile
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartGcsWithJsonKeyBody'
      responses:
        "201":
          description: Source filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: multipart/form-data
      x-accepts: application/json
    patch:
      tags:
      - GCS Source File System Controller
      summary: Update a source GCS file system with credentials uploaded with JSON
        key file
      operationId: updateSourceGcsFileSystemJsonKeyFile
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the source file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartGcsWithJsonKeyBody'
      responses:
        "200":
          description: Source filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: fileSystemId not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: filesystemId defined against filesystem of incompatible configuration
            for this method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: multipart/form-data
      x-accepts: application/json
  /fs/autodiscover/sources/hdfs:
    post:
      tags:
      - HDFS Source File System Autodiscovery Controller
      summary: Automatically discover the local hadoop source file system
      operationId: autoDiscoverSourceFilesystem
      parameters:
      - name: scanOnly
        in: query
        description: Scan-only will not pick up any changes to the underlying filesystem
          during migrations
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Source file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HdfsFilesystemProperties'
        required: true
      responses:
        "201":
          description: Source filesystem discovered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Invalid values to connect to file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "404":
          description: Filesystem could not be added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: source filesystem already defined.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
  /fs/sources:
    get:
      tags:
      - Source File System Controller
      summary: List all source filesystems
      operationId: listSourceFileSystems
      parameters:
      - name: verbose
        in: query
        description: Optional parameter to return all filesystem properties
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Source filesystems retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileSystemConfiguration'
                x-content-type: application/json
      x-accepts: application/json
    delete:
      tags:
      - Source File System Controller
      summary: Delete all source file systems
      operationId: clearSourceFileSystems
      parameters:
      - name: deleteListener
        in: query
        description: Optional parameter to delete an event listener on source system
          while deleting the source from LDM
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Source filesystems deleted successfully
        "409":
          description: Migrations are still active on the filesystems requested to
            be deleted or used in existing path mappings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /fs/sources/{sourceId}:
    get:
      tags:
      - Source File System Controller
      summary: Get source file system for given ID
      operationId: getSourceFileSystem
      parameters:
      - name: sourceId
        in: path
        description: Unique identifier of the source filesystem
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: verbose
        in: query
        description: Optional parameter to return all filesystem properties
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Source filesystem retrieved successfully for the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "404":
          description: Source filesystem not found for the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
    delete:
      tags:
      - Source File System Controller
      summary: Delete source file system for given ID
      operationId: deleteSourceFileSystem
      parameters:
      - name: sourceId
        in: path
        description: Unique identifier of the source filesystem
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: deleteListener
        in: query
        description: Optional parameter to delete an event listener on source system
          while deleting the source from LDM
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Source filesystem deleted successfully for given ID
        "404":
          description: Source filesystem not found for the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: Migrations are still active on the filesystems requested to
            be deleted or used in existing path mappings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /fs/sources/auto-discover-message:
    get:
      tags:
      - Source File System Controller
      summary: Get auto-discover file system message
      operationId: getSourceAutoDiscoverMessage
      responses:
        "200":
          description: Auto-discover message retrieved successfully
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
      x-accepts: application/json
  /fs/sources/auto-discover-status:
    get:
      tags:
      - Source File System Controller
      summary: Get auto-discover file system status object
      operationId: getSourceAutoDiscoverStatus
      responses:
        "200":
          description: Auto-discover status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoDiscoverFSStatus'
  /fs/targets/hdfs/{fileSystemId}:
    post:
      tags:
      - HDFS Target File System Controller
      summary: Add a new target Hadoop target file system
      operationId: addTargetHdfsFileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Target file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HdfsFilesystemProperties'
        required: true
      responses:
        "201":
          description: filesystem added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "401":
          description: Filesystem credentials provided are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to add file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
    patch:
      tags:
      - HDFS Target File System Controller
      summary: Update a target Hadoop target file system
      operationId: updateTargetHdfsFileSystem
      parameters:
      - name: fileSystemId
        in: path
        description: Unique Identifier for the target file system
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertiesFiles
        in: query
        description: Load configuration from files that are accessible from server
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      requestBody:
        description: Target file system properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HdfsFilesystemProperties'
        required: true
      responses:
        "200":
          description: Filesystem updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "400":
          description: Method Argument Not Valid. One or more of the supplied values
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "401":
          description: Filesystem credentials provided are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: filesystem already defined against the provided fileSystemId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: filesystemId defined against filesystem of incompatible configuration
            for this method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Unsupported or invalid file system configuration value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Failed to update file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
  /fs/targets/{targetId}:
    get:
      tags:
      - Target File System Controller
      summary: Get target file system for given ID
      operationId: getFileSystem
      parameters:
      - name: targetId
        in: path
        description: Unique identifier of the target file system Object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: verbose
        in: query
        description: Optional parameter to return all filesystem properties
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Target file System retrieved successfully for the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemConfiguration'
        "404":
          description: Target file System not found for the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
    delete:
      tags:
      - Target File System Controller
      summary: Delete target file system for given ID
      operationId: deleteTargetFileSystem
      parameters:
      - name: targetId
        in: path
        description: Unique identifier of the target file system Object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Target file System deleted successfully for given ID
        "404":
          description: Target file System not found for the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: Migrations are still active on the filesystems requested to
            be deleted or used in existing path mappings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /fs/targets/availableFileSystems:
    get:
      tags:
      - Target File System Controller
      summary: List all available file systems
      operationId: getAvailableFileSystems
      responses:
        "200":
          description: All available file systems retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FsType'
                x-content-type: application/json
      x-accepts: application/json
  /fs/targets:
    get:
      tags:
      - Target File System Controller
      summary: List all target file systems
      operationId: listTargetFileSystems
      parameters:
      - name: verbose
        in: query
        description: Optional parameter to return all filesystem properties
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Target filesystems retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileSystemConfiguration'
                x-content-type: application/json
      x-accepts: application/json
    delete:
      tags:
      - Target File System Controller
      summary: Delete all target file systems. NOTE this endpoint is currently for
        test purposes only.
      operationId: clearTargetFileSystems
      responses:
        "200":
          description: Target filesystems deleted successfully
        "409":
          description: Migrations are still active on the filesystems requested to
            be deleted or used in existing path mappings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations:
    get:
      tags:
      - Migration Controller
      summary: List all migrations
      operationId: listMigration
      responses:
        "200":
          description: Migrations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Migration'
                x-content-type: application/json
      x-accepts: application/json
    delete:
      tags:
      - Migration Controller
      summary: Delete all migrations
      operationId: clearMigrations
      responses:
        "200":
          description: All migrations deleted successfully
        "404":
          description: No migration found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "403":
          description: Migration could not be deleted in current state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}/start:
    post:
      tags:
      - Migration Controller
      summary: Start migration for given migration ID
      operationId: startMigration
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Migration started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migration'
        "403":
          description: Insufficient file system permissions to start migration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientFsPermissionsException'
        "404":
          description: Could not find the migration start path/filesystem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Source or Target file System is not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}/stop:
    post:
      tags:
      - Migration Controller
      summary: Stop migration for given migration ID
      operationId: stopMigration
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resumable
        in: query
        description: If the migration may be resumed later
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: Migration retrieved successfully
        "403":
          description: Migration can not be stopped from current state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "404":
          description: No migration found for the given migration ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}/resume:
    post:
      tags:
      - Migration Controller
      summary: Resume migration for given migration ID
      operationId: resumeMigration
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Migration resumed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migration'
        "403":
          description: Insufficient file system permissions to resume migration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientFsPermissionsException'
        "404":
          description: Could not find the migration start path/filesystem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Source or Target file System is not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}/reset:
    post:
      tags:
      - Migration Controller
      summary: Reset migration for given migration ID
      operationId: resetMigration
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: actionPolicy
        in: query
        description: Override overwrite policy for existing files on target
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: reloadMappings
        in: query
        description: Reload path mappings
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Migration reset successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migration'
        "403":
          description: Insufficient file system permissions to reset migration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientFsPermissionsException'
        "404":
          description: Could not find the migration start path/filesystem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Source or Target file System is not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}/pendingRegions:
    get:
      tags:
      - Migration Controller
      summary: Get the PendingRegions for a Migration.
      operationId: getPendingRegionsForMigration
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: List of PendingRegions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PendingRegion'
                x-content-type: application/json
        "404":
          description: No migration found for given ID or path does not exist on source.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}/addPendingRegion:
    post:
      tags:
      - Migration Controller
      summary: "Add a path as a pending region to migration, so LDM will rescan that\
        \ path."
      operationId: addPendingRegionToMigration
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: path
        in: query
        description: Path of the new pending region
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: actionPolicy
        in: query
        description: Overwrite policy for existing files on target
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Pending region added to migration successfully
        "404":
          description: No migration found for given ID or path does not exist on source.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "405":
          description: Pending regions can not be added to this migration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: Pending region already exists for given migration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Unable to access source filesystem.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}/oldestIncompleteWorkItem:
    get:
      tags:
      - Migration Controller
      summary: Get the oldest incomplete work item for a Migration.
      operationId: getOldestIncompleteWorkItem
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: oldest incomplete work item for given migration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OldestIncompleteWorkItem'
        "404":
          description: No migration found for given ID or path does not exist on source.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}/failures:
    get:
      tags:
      - Migration Controller
      summary: List the last 10000 files which failed to migrate
      operationId: listMigrationErrors
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: migrationId
      - name: since
        in: query
        description: "If a failure is earlier than this, it will be excluded from\
          \ the list of failed paths. If no value is provided, all known failed paths\
          \ will be returned."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2020-02-03T15:15:05.000+00:00
      responses:
        "200":
          description: Migration failures retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationFailures'
        "404":
          description: No migration found for the given migration ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}/autoSourceCleanupQueuedPaths:
    get:
      tags:
      - Migration Controller
      summary: List the top 10000 Auto-source Cleanup Paths Queued for deletion.
      operationId: listAutoSourceCleanupQueuedPaths
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: migrationId
      responses:
        "200":
          description: Migration Auto Source Cleanup Queued Paths retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SourceCleanupQueuedPath'
                x-content-type: application/json
        "404":
          description: No migration found for the given migration ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}/checkMigrationPathMappings:
    post:
      tags:
      - Migration Controller
      summary: Check migration path mappings
      operationId: checkMigrationPathMappings
      parameters:
      - name: migrationId
        in: path
        description: Unique Identifier for the migration
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: path
        in: query
        description: Migration path of the source file system
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: target
        in: query
        description: ID of the target file system
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: source
        in: query
        description: ID of the source file system
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: Check completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationMappingCheckResult'
        "404":
          description: Could not find the migration start path or file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/oldestIncompleteWorkItems:
    get:
      tags:
      - Migration Controller
      summary: Get a list of oldest incomplete work items across all migrations.
      operationId: getOldestIncompleteWorkItems
      responses:
        "200":
          description: List of oldest incomplete work items across all migrations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OldestIncompleteWorkItem'
                x-content-type: application/json
      x-accepts: application/json
  /migrations/stop:
    post:
      tags:
      - Migration Controller
      summary: Stop all migrations
      operationId: stopAllMigrations
      parameters:
      - name: resumable
        in: query
        description: If the migration may be resumed later
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: Migration retrieved successfully
        "403":
          description: Migration can not be stopped from current state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "404":
          description: No migration found for the given migration ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}/maxStoppedUnscheduledEventBuffer/{maxEvents}:
    put:
      tags:
      - Migration Controller
      summary: Update the maximum number of unscheduled events to store for a migration
        if it is stopped.
      operationId: updateMigrationMaxUnscheduledEvents
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: maxEvents
        in: path
        description: Maximum number of unscheduled events to store
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Updated successfully
        "404":
          description: No migration or exclusion found for given IDs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}/maxPendingRegions/{maxPendingRegions}:
    put:
      tags:
      - Migration Controller
      summary: Update the maximum number of pending regions for a migration.
      operationId: updateMigrationMaxPendingRegions
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: maxPendingRegions
        in: path
        description: Maximum number of pending regions
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Updated successfully
        "400":
          description: Invalid maximum specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "404":
          description: No migration or exclusion found for given IDs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: More pending regions exist than the specified maximum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}/exclusions/{exclusionId}:
    put:
      tags:
      - Migration Controller
      summary: Add exclusion to migration
      operationId: addExclusionToMigration
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: exclusionId
        in: path
        description: Unique identifier of the exclusion object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Exclusion added to migration successfully
        "404":
          description: No migration or exclusion found for given IDs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: Exclusion already exists for given migration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
    delete:
      tags:
      - Migration Controller
      summary: Remove exclusion from migration
      operationId: deleteExclusionFromMigration
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: exclusionId
        in: path
        description: Unique identifier of the exclusion object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Exclusion removed from migration successfully
        "404":
          description: No migration or exclusion found for given IDs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}:
    get:
      tags:
      - Migration Controller
      summary: Get migration for given migration ID
      operationId: fetchMigration
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Migration retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migration'
        "404":
          description: No migration found for the given migration ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
    put:
      tags:
      - Migration Controller
      summary: Add a new migration
      operationId: newMigrationWithId
      parameters:
      - name: migrationId
        in: path
        description: Unique Identifier for the migration
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: path
        in: query
        description: Migration path of the source file system
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: source
        in: query
        description: ID of the source file system
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ""
      - name: target
        in: query
        description: ID of the target file system
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: exclusions
        in: query
        description: List of exclusions to apply
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: actionPolicy
        in: query
        description: Overwrite policy for existing files on target
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: autoStart
        in: query
        description: Flag to start migration immediately
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: scanOnlyMigration
        in: query
        description: Flag to run scan-only migration
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: additionalProperties
        in: query
        description: Migration additional properties
        required: false
        style: form
        explode: true
        schema:
          type: object
          additionalProperties:
            type: string
          default: {}
        example:
          prop1: value1
      - name: deletionMode
        in: query
        description: Migration Deletion Mode
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: delayedDeletionPeriod
        in: query
        description: Delayed Deletion Period in seconds
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: autoSourceCleanupEnabled
        in: query
        description: Flag to enable auto source clean up actions on the migration
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: recurringMigration
        in: query
        description: Flag for Migration Recurring Mode
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: recurringPeriod
        in: query
        description: Recurring Period in seconds
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: migrationPriority
        in: query
        description: Migration priority
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Migration added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migration'
        "400":
          description: Migration scanOnly value is not accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "403":
          description: Insufficient file system permissions to start migration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientFsPermissionsException'
        "404":
          description: Could not find the migration start path or file system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: Provided Migration Id or path already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Source or Target file System is not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
    delete:
      tags:
      - Migration Controller
      summary: Delete migration for given migration ID
      operationId: deleteMigration
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Migration deleted successfully
        "403":
          description: Failed to delete migration with current state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "404":
          description: No migration found for the given migration ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
    patch:
      tags:
      - Migration Controller
      summary: Update a migration's additional properties
      operationId: updateMigrationProperties
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: additionalProperties
        in: query
        description: Migration additional properties
        required: false
        style: form
        explode: true
        schema:
          type: object
          additionalProperties:
            type: string
        example:
          prop1: value1
      requestBody:
        description: Migration configuration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationPatch'
        required: false
      responses:
        "200":
          description: Migration properties updated successfully
        "404":
          description: No migration found for given id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}/toggleDeletionMode:
    put:
      tags:
      - Migration Controller
      summary: Toggle the migration deletion mode
      operationId: toggleMigrationDeletionMode
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: deletionMode
        in: query
        description: Desired Deletion mode to toggle for migration
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: actionPolicy
        in: query
        description: Overwrite policy for existing files on target
        required: true
        style: form
        explode: true
        schema:
          type: string
          default: com.wandisco.livemigrator2.migration.OverwriteActionPolicy
      - name: delayedDeletionPeriod
        in: query
        description: Delayed Deletion Period in seconds
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Migration deletion mode toggled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Migration'
        "403":
          description: Insufficient file system permissions to reset migration deletion
            mode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientFsPermissionsException'
        "404":
          description: Could not find the migration start path/filesystem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: Deletion mode can't be updated from current state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Source or Target file System is not accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /migrations/{migrationId}/withAssets:
    delete:
      tags:
      - Migration Controller
      summary: Delete migration for given migration ID along with its assets
      operationId: deleteMigrationWithAssets
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Migration deleted successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/AssetDeletionStats'
                x-content-type: application/json
        "403":
          description: Failed to delete migration with current state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "404":
          description: No migration found for the given migration ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /fs/{role}/{fsId}/writeFile:
    post:
      tags:
      - File System Controller
      summary: Write file into the file system
      operationId: writeFile
      parameters:
      - name: fsId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - sources
          - targets
      - name: path
        in: query
        description: Path to the file
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: File write parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileWriteRequest'
        required: true
      responses:
        "200":
          description: File written successfully
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "401":
          description: Insufficient privileges to perform requested operation
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "405":
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "404":
          description: File system not found
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
      x-contentType: application/json
      x-accepts: application/json
  /fs/{role}/{fsId}/moveByPath:
    post:
      tags:
      - File System Controller
      summary: Move file or directory on the file system
      operationId: moveByPath
      parameters:
      - name: fsId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - sources
          - targets
      - name: path
        in: query
        description: Path to the file or directory
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: destPath
        in: query
        description: Destination path to the file or directory
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: File moved successfully
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "401":
          description: Insufficient privileges to perform requested operation
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "404":
          description: File system or file not found
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
      x-accepts: application/json
  /fs/{role}/{fsId}/mkdir:
    post:
      tags:
      - File System Controller
      summary: Create directory in the file system
      operationId: mkdir
      parameters:
      - name: fsId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - sources
          - targets
      - name: path
        in: query
        description: Path to the directory
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Directory created successfully
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "401":
          description: Insufficient privileges to perform requested operation
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "404":
          description: File system not found
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
      x-accepts: application/json
  /fs/{role}/{fsId}/deleteByPath:
    post:
      tags:
      - File System Controller
      summary: Delete file from the file system
      operationId: deleteByPath
      parameters:
      - name: fsId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - sources
          - targets
      - name: path
        in: query
        description: Path to the file or directory
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: File delete parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileDeleteRequest'
        required: true
      responses:
        "200":
          description: File delete successfully
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "401":
          description: Insufficient privileges to perform requested operation
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "404":
          description: File system or file not found
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
      x-contentType: application/json
      x-accepts: application/json
  /fs/{role}/{fsId}/createFile:
    post:
      tags:
      - File System Controller
      summary: Create file on the file system
      operationId: createFile
      parameters:
      - name: fsId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - sources
          - targets
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartCreateFileBody'
      responses:
        "201":
          description: File created successfully
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "401":
          description: Insufficient privileges to perform requested operation
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "404":
          description: File system not found
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
      x-contentType: multipart/form-data
      x-accepts: application/json
  /fs/{role}/{fsId}/readFile:
    get:
      tags:
      - File System Controller
      summary: Read file from the file system
      operationId: readFile
      parameters:
      - name: fsId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - sources
          - targets
      - name: path
        in: query
        description: Path to the file
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: File read successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                x-content-type: application/octet-stream
        "401":
          description: Insufficient privileges to perform requested operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                x-content-type: application/octet-stream
        "404":
          description: File system or file not found
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                x-content-type: application/octet-stream
      x-accepts: application/octet-stream
  /fs/{role}/{fsId}/pathExists:
    get:
      tags:
      - File System Controller
      summary: Check if file or directory exists
      operationId: path
      parameters:
      - name: fsId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - sources
          - targets
      - name: path
        in: query
        description: Path to the file or directory
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Path checked successfully
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "401":
          description: Insufficient privileges to perform requested operation
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "404":
          description: File system not found
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
      x-accepts: application/json
  /fs/{role}/{fsId}/listPaths:
    get:
      tags:
      - File System Controller
      summary: Get files list from the file system
      operationId: listPaths
      parameters:
      - name: fsId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - sources
          - targets
      - name: path
        in: query
        description: Path to the file or directory
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileStatus'
                x-content-type: application/json
        "401":
          description: Insufficient privileges to perform requested operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileStatus'
                x-content-type: application/json
        "404":
          description: File system not found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileStatus'
                x-content-type: application/json
      x-accepts: application/json
  /fs/{role}/{fsId}/fileSystemURI:
    get:
      tags:
      - File System Controller
      summary: Get file system URI for given filesystem id
      operationId: getFileSystemURI
      parameters:
      - name: fsId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - sources
          - targets
      responses:
        "200":
          description: file system URI returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemURI'
        "401":
          description: Insufficient privileges to perform requested operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "404":
          description: File system not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /license:
    get:
      tags:
      - License Controller
      summary: Get License for LiveData Migrator
      operationId: fetchLicense
      parameters:
      - name: fullLicense
        in: query
        description: Flag return complete license information
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: License returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
        "404":
          description: No license available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
    post:
      tags:
      - License Controller
      summary: Update License for LiveData Migrator
      operationId: updateLicense
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LicenseFileBody'
      responses:
        "200":
          description: License Updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
        "422":
          description: Invalid License
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "500":
          description: Insufficient permissions to create licence on disk
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: multipart/form-data
      x-accepts: application/json
  /license/valid:
    get:
      tags:
      - License Controller
      summary: Get whether License is valid for LiveData Migrator
      operationId: fetchLicenseValid
      responses:
        "200":
          description: "License is valid or not, either true or false."
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "404":
          description: No license available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /license/status:
    get:
      tags:
      - License Controller
      summary: Get License Status for LiveData Migrator
      operationId: fetchLicenseStatus
      responses:
        "200":
          description: License Status.
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "404":
          description: No license available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /license/components/volume:
    get:
      tags:
      - License Controller
      summary: Get Volume License Component for LiveData Migrator
      operationId: fetchVolumeLicense
      responses:
        "200":
          description: License returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLicense'
        "404":
          description: No license available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /license/components/trial:
    get:
      tags:
      - License Controller
      summary: Get Trial License Component for LiveData Migrator
      operationId: fetchTrialLicense
      responses:
        "200":
          description: License returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrialLicense'
        "404":
          description: No license available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /license/components/metered:
    get:
      tags:
      - License Controller
      summary: Get Metered License Component for LiveData Migrator
      operationId: fetchMeteredLicense
      responses:
        "200":
          description: License returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteredLicense'
        "404":
          description: No license available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /license/components/consumption:
    get:
      tags:
      - License Controller
      summary: Get Consumption License Component for LiveData Migrator
      operationId: fetchConsumptionLicense
      responses:
        "200":
          description: License returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumptionLicense'
        "404":
          description: No license available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /license/components:
    get:
      tags:
      - License Controller
      summary: Get License Components for LiveData Migrator
      operationId: fetchLicenseComponents
      responses:
        "200":
          description: License returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LicenseComponent'
                x-content-type: application/json
        "404":
          description: No license available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /backups:
    get:
      tags:
      - Backups Controller
      summary: list of available LM2 backups
      operationId: getBackupsList
      parameters:
      - name: limit
        in: query
        description: Size limit of returned backups list.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: returns list of available LM2 backups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackupEntry'
                x-content-type: application/json
        "403":
          description: Access denied to file system where backup are stored.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
    post:
      tags:
      - Backups Controller
      summary: Generate a Backup.
      operationId: createBackup
      responses:
        "200":
          description: generate backup now
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupEntry'
        "400":
          description: Backup can not be created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "403":
          description: Access denied to file system where backup are stored.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
  /backups/config:
    get:
      tags:
      - Backups Controller
      summary: backup config entity
      operationId: getBackupConfig
      responses:
        "200":
          description: returns backup config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupConfigInfo'
        "403":
          description: Access denied to file system where backup are stored.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /backups/config/schedule:
    get:
      tags:
      - Backups Controller
      summary: Returns current schedule configuration
      operationId: getBackupSchedule
      responses:
        "200":
          description: Returns current schedule configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupSchedule'
      x-accepts: application/json
    put:
      tags:
      - Backups Controller
      summary: Update current schedule.
      operationId: updateSchedule
      requestBody:
        description: Backup schedule entity for update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupSchedule'
        required: true
      responses:
        "200":
          description: schedule updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupSchedule'
        "400":
          description: Schedule was not updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Schedule config could not be updated because invalid parameter
            was passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
  /backups/restore/{backupName}:
    post:
      tags:
      - Backups Controller
      summary: Restore application state by backup by provided backup ID
      operationId: restoreBackup
      parameters:
      - name: backupName
        in: path
        description: Unique identifier of backup entry
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Application restored from backup by provided backup id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupEntry'
        "404":
          description: Backup was not found for the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "403":
          description: Access denied to file system where backup are stored.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "422":
          description: Some issues during try to restore from backup. Possible backup
            file is corrupted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-contentType: application/json
      x-accepts: application/json
  /backups/{backupName}:
    get:
      tags:
      - Backups Controller
      operationId: getBackupByName
      parameters:
      - name: backupName
        in: path
        description: provided backup file name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: get backup by backup file name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupEntry'
        "404":
          description: Backup was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /metering:
    put:
      tags:
      - Metering Controller
      summary: 'Get metering statistics for LiveData Migrator and extend license '
      operationId: getMeteringStatsAndExtendLicense
      parameters:
      - name: useMinutes
        in: query
        description: Flag return Metering buckets in minutes
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: overrideExtensionTime
        in: query
        description: Override extension period.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: -1
      responses:
        "200":
          description: Metering statistics returned and license extended
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metering'
      x-accepts: application/json
  /metering/stats:
    get:
      tags:
      - Metering Controller
      summary: Get metering statistics for LiveData Migrator
      operationId: fetchMeteringStats
      parameters:
      - name: useMinutes
        in: query
        description: Flag return Metering buckets in minutes
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Metering statistics returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metering'
      x-accepts: application/json
  /metering/license:
    get:
      tags:
      - Metering Controller
      summary: Get Metered License for LiveData Migrator
      operationId: fetchMeteringLicense
      responses:
        "200":
          description: Metered License returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteredLicense'
        "404":
          description: No license available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /diagnostics/{migrationId}/actionStore:
    get:
      tags:
      - Diagnostics Controller
      summary: To be used for debugging purposes only - dumps the ActionStore for
        a Migration to file.
      operationId: dumpActionStoreForMigration
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully dumped action store to file
        "404":
          description: No migration found for given ID or path does not exist on source.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /diagnostics/summary.txt:
    get:
      tags:
      - Diagnostics Controller
      summary: Get Diagnostic Summary Plain Text
      operationId: fetchDiagnosticsSummaryTxt
      responses:
        "200":
          description: Diagnostics summary retrieved successfully
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-accepts: text/plain
  /diagnostics/summary:
    get:
      tags:
      - Diagnostics Controller
      summary: Get Diagnostic Summary
      operationId: fetchDiagnosticsSummary
      responses:
        "200":
          description: Diagnostics summary retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticSummary'
      x-accepts: application/json
  /diagnostics/netstat/totals:
    get:
      tags:
      - Diagnostics Controller
      summary: Get Connections Total Queue Sizes and ReTransmit Counts.
      operationId: fetchNetworkStatusTotals
      responses:
        "200":
          description: Connection metrics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/RxTxTotals'
                x-content-type: application/json
        "403":
          description: Endpoint only supported on Linux host.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/RxTxTotals'
                x-content-type: application/json
      x-accepts: application/json
  /diagnostics/netstat/tcpStatesCount:
    get:
      tags:
      - Diagnostics Controller
      summary: Get a map of total connections to their TCP state.
      operationId: fetchCountTcpStates
      responses:
        "200":
          description: TCP connection states retrieved successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
                x-content-type: application/json
        "403":
          description: Endpoint only supported on Linux host.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
                x-content-type: application/json
      x-accepts: application/json
  /diagnostics/netstat/connections:
    get:
      tags:
      - Diagnostics Controller
      summary: Get Established Connections.
      operationId: fetchNetworkConnections
      responses:
        "200":
          description: Established Connections retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkConnection'
                x-content-type: application/json
        "403":
          description: Endpoint only supported on Linux host.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkConnection'
                x-content-type: application/json
      x-accepts: application/json
  /diagnostics/netstat:
    get:
      tags:
      - Diagnostics Controller
      summary: Get Netstat Status.
      operationId: fetchNetworkStatus
      responses:
        "200":
          description: Netstat retrieved successfully
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
            application/json:
              schema:
                type: string
        "403":
          description: Endpoint only supported on Linux host.
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
            application/json:
              schema:
                type: string
      x-accepts: application/json
  /diagnostics/lastCollected:
    get:
      tags:
      - Diagnostics Controller
      summary: "Get last collected set of Diagnostics. Will return the last collected\
        \ set of Diagnostics. kind can be used to filter the diagnostics returned,\
        \ it is a comma separated list of Diagnostics kinds."
      operationId: fetchLatestDiagnostics
      parameters:
      - name: kind
        in: query
        description: Filter based on Diagnostic kind
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Diagnostics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorDiagnosticsSnapshot'
      x-accepts: application/json
  /diagnostics/descriptions:
    get:
      tags:
      - Diagnostics Controller
      summary: Get Diagnostics Descriptions. Return the set of available Diagnostics
        and a description of the information they return.
      operationId: fetchDiagnosticsDescriptions
      responses:
        "200":
          description: Diagnostics Descriptions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiagnosticDescription'
                x-content-type: application/json
      x-accepts: application/json
  /diagnostics/collect:
    get:
      tags:
      - Diagnostics Controller
      summary: "Trigger Diagnostics Collection. Will trigger the collection of Diagnostics\
        \ and return the new set of Diagnostics generated. kind can be used to filter\
        \ the diagnostics returned, it is a comma separated list of Diagnostics kinds."
      operationId: fetchCurrentDiagnostics
      parameters:
      - name: kind
        in: query
        description: Filter based on Diagnostic kind
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Diagnostics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorDiagnosticsSnapshot'
      x-accepts: application/json
  /diagnostics:
    get:
      tags:
      - Diagnostics Controller
      summary: "Get all Diagnostics sets over time. kind can be used to filter the\
        \ diagnostics returned, it is a comma separated list of Diagnostics kinds."
      operationId: fetchAllDiagnostics
      parameters:
      - name: kind
        in: query
        description: Filter based on Diagnostic kind.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: count
        in: query
        description: Limit number of Diagnostic sets returned. Higher counts may cause
          large responses. It is advised to use curl or another tool in this case.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        example: 25
      responses:
        "200":
          description: Diagnostics retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LiveMigratorDiagnosticsSnapshot'
                x-content-type: application/json
      x-accepts: application/json
  /diagnostics/dta/lastCollected/{agentName}:
    get:
      tags:
      - Data Agent Diagnostics Controller
      summary: "Get last collected snapshot of Diagnostics for specified agent by\
        \ agent name. Will return the last collected snapshot of Diagnostics. kind\
        \ can be used to filter the diagnostics returned, it is a comma separated\
        \ list of Diagnostics kinds."
      operationId: fetchLatestDiagnosticsByAgentName
      parameters:
      - name: kind
        in: query
        description: Filter based on Diagnostic kind
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: agentName
        in: path
        description: Data agent name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Diagnostics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAgentDiagnosticsSnapshot'
        "404":
          description: Agent is not existing with such agentName and no any diagnostics
            was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /diagnostics/dta/{agentName}:
    get:
      tags:
      - Data Agent Diagnostics Controller
      summary: "Get all Diagnostics snapshots for all data agents over time. \"kind\"\
        \ can be used to filter the diagnostics returned, it is a comma separated\
        \ list of Diagnostics kinds."
      operationId: fetchAllDiagnosticsByAgentName
      parameters:
      - name: kind
        in: query
        description: Filter based on Diagnostic kind.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: count
        in: query
        description: Limit number of Diagnostic snapshots returned. Higher counts
          may cause large responses. It is advised to use curl or another tool in
          this case.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        example: 25
      - name: agentName
        in: path
        description: Data agent name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Diagnostics retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataAgentDiagnosticsSnapshot'
                x-content-type: application/json
        "404":
          description: Agent is not existing with such agentName and no any diagnostics
            was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /configuration/property:
    get:
      tags:
      - Configuration Controller
      summary: Get value for given configuration property
      operationId: getConfigurationProperty
      parameters:
      - name: key
        in: query
        description: Key - property name to be get
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Configuration property retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        "404":
          description: Configuration property is not known
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
    put:
      tags:
      - Configuration Controller
      summary: Set key/value configuration property
      operationId: setConfigurationProperty
      parameters:
      - name: key
        in: query
        description: Key - property name to be set
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: value
        in: query
        description: Value - value to set corresponding property to
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Set key/value configruation property
        "404":
          description: Configuration property is not known
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /configuration/properties:
    get:
      tags:
      - Configuration Controller
      summary: Get all configuration properties
      operationId: getConfigurationProperties
      responses:
        "200":
          description: Configuration properties retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration'
                x-content-type: application/json
  /requeuing-actions/queuing:
    get:
      tags:
      - Requeuing Actions Controller
      summary: Get all requeuing actions
      operationId: getAllRequeuingActions
      parameters:
      - name: limit
        in: query
        description: Limit number of actions returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1000
      responses:
        "200":
          description: List of PendingRegions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequeuingAction'
                x-content-type: application/json
      x-accepts: application/json
  /requeuing-actions/queuing/{migrationId}:
    get:
      tags:
      - Requeuing Actions Controller
      summary: Get all requeuing actions for specific migration
      operationId: getMigrationRequeuingActions
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: Limit number of actions returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1000
      responses:
        "200":
          description: All requeue actions retrieved successfully for specific migration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequeuingAction'
                x-content-type: application/json
      x-accepts: application/json
  /requeuing-actions/queuing/{migrationId}/{actionId}:
    get:
      tags:
      - Requeuing Actions Controller
      summary: Get requeue action by migration ID and action ID
      operationId: getRequeuingAction
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: actionId
        in: path
        description: Unique identifier of the action object
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Requeue action retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequeuingAction'
      x-accepts: application/json
  /requeuing-actions/queuing/{migrationId}/{actionId}/cancel:
    post:
      tags:
      - Requeuing Actions Controller
      summary: Remove requeue action from migration
      operationId: cancelRequeuingAction
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: actionId
        in: path
        description: Unique identifier of the action object
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Action removed from migration successfully
        "404":
          description: No migration or action found for given IDs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /requeuing-actions/stats:
    get:
      tags:
      - Requeuing Actions Controller
      summary: Get all requeuing actions stats
      operationId: getAllRequeuingActionsStats
      responses:
        "200":
          description: All requeue actions stats retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequeuingActionsStats'
      x-accepts: application/json
  /requeuing-actions/stats/{migrationId}:
    get:
      tags:
      - Requeuing Actions Controller
      summary: Get all requeuing actions stats for specific migration
      operationId: getMigrationRequeuingActionsStats
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: All requeue actions stats retrieved successfully for specific
            migration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequeuingActionsStats'
      x-accepts: application/json
  /verifications:
    get:
      tags:
      - Verification Controller
      summary: Get all Verifications
      operationId: fetchAllVerifications
      parameters:
      - name: migrationId
        in: query
        description: If this parameter is supplied only verifications for the given
          migrationId will be returned
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Verifications retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Verification'
                x-content-type: application/json
        "404":
          description: Migration not found for the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      deprecated: true
      x-accepts: application/json
    put:
      tags:
      - Verification Controller
      summary: Trigger a new Verification
      operationId: triggerVerification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationConfiguration'
      responses:
        "200":
          description: Verifications triggered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
        "400":
          description: Verification not triggered because paths overlapped or not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "404":
          description: Verification paths not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /verifications/filtered:
    get:
      tags:
      - Verification Controller
      summary: Get all Verifications filtered by migrationId and/or verification status
      operationId: fetchAllFilteredVerifications
      parameters:
      - name: migrationIds
        in: query
        description: If this parameter is supplied only verifications for the given
          migrationIds will be returned
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      - name: states
        in: query
        description: "If this parameter is supplied, only verifications in the specified\
          \ states will be returned"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default: []
      responses:
        "200":
          description: Verifications retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Verification'
                x-content-type: application/json
  /verifications/{verificationId}:
    get:
      tags:
      - Verification Controller
      summary: Get verification for given ID
      operationId: getVerification
      parameters:
      - name: verificationId
        in: path
        description: Unique identifier of the verification Object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Verification retrieved successfully for the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
        "404":
          description: Verification not found for the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
    delete:
      tags:
      - Verification Controller
      summary: Delete verification with given ID
      operationId: deleteVerification
      parameters:
      - name: verificationId
        in: path
        description: Unique identifier of the verification Object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Verification deleted successfully
        "404":
          description: Verification not found for the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "409":
          description: Verification scan is in progress
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
  /verifications/{verificationId}/cancel:
    post:
      tags:
      - Verification Controller
      summary: Cancel verification with given ID
      operationId: cancelVerification
      parameters:
      - name: verificationId
        in: path
        description: Unique identifier of the verification Object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Verification cancelled successfully
        "404":
          description: Verification not found for the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
      x-accepts: application/json
  /verifications/{verificationId}/reports:
    get:
      tags:
      - Verification Controller
      summary: Get the metadata for the available reports for the given verification
      operationId: getVerificationReportsList
      parameters:
      - name: verificationId
        in: path
        description: Unique identifier of the verification Object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Verification report metadata request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VerificationReportFileMetadata'
                x-content-type: application/json
        "404":
          description: Verification not found for the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
  /verifications/reports/{verificationId}:
    get:
      tags:
      - Verification Controller
      summary: Get verification report for a given ID
      operationId: getVerificationReport
      parameters:
      - name: verificationId
        in: path
        description: Unique identifier of the verification whose report is to be returned
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reportId
        in: query
        description: Identifier of the report to be returned
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Verification report retrieved successfully for the given verification
            ID
          headers:
            Transfer-Encoding:
              description: chunked
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/x-tar:
              schema:
                $ref: '#/components/schemas/StreamedFile'
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedFile'
            application/gzip:
              schema:
                $ref: '#/components/schemas/StreamedFile'
        "404":
          description: Verification or report not found for the given ids
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
        "400":
          description: The given report ID does not match any know report type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
  /scaling/dataagents/{agentName}:
    get:
      tags:
      - Data Agents Controller
      summary: Get Data Agent with given name
      operationId: getDataAgent
      parameters:
      - name: agentName
        in: path
        description: Data Agent user-defined name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Returns Agent Entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAgent'
        "404":
          description: Agent with given name was not found.
    delete:
      tags:
      - Data Agents Controller
      summary: Delete Data Transfer Agent from LM2
      operationId: deleteDataAgent
      parameters:
      - name: agentName
        in: path
        description: Data Agent user-defined name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Data Agent deleted successfully.
        "404":
          description: Agent with given name was not found.
  /scaling/dataagents/:
    get:
      tags:
      - Data Agents Controller
      summary: Get Data Agent list
      operationId: getDataAgentList
      responses:
        "200":
          description: Returns Agent Entity.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataAgent'
                x-content-type: application/json
    post:
      tags:
      - Data Agents Controller
      summary: Add new Data Transfer Agent
      operationId: addDataAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataAgentAddRequest'
      responses:
        "201":
          description: Data Agent registered in LM2.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAgent'
        "400":
          description: Could not connect to Data Agent. Agent token is not correct.
        "409":
          description: "Either Data Agent with such name already exists, or host and\
            \ port is already in use."
        "422":
          description: "Could not connect to Data Agent. Data Agent not found for\
            \ given host, or Data Agent is incompatible with current Live Migrator."
      x-accepts: application/json
  /source-cleanup/{migrationId}/reports:
    get:
      tags:
      - Source Cleanup Controller
      summary: Get the metadata of the available source cleanup reports for the given
        Migration
      operationId: getSourceCleanupReportsList
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the Migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Source cleanup report metadata request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SourceCleanupReportFileMetadata'
                x-content-type: application/json
        "404":
          description: Source cleanup report not found for the given Migration ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
  /source-cleanup/reports/{migrationId}:
    get:
      tags:
      - Source Cleanup Controller
      summary: Get a source cleanup report for a given migration ID and report name
      operationId: getSourceCleanupReport
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the Migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reportName
        in: query
        description: filename of the report to be returned
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Source cleanup report retrieved successfully for the given
            migration ID
          headers:
            Transfer-Encoding:
              description: chunked
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedFile'
            application/gzip:
              schema:
                $ref: '#/components/schemas/StreamedFile'
        "404":
          description: Source cleanup report not found for the given report name and
            migration ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
    delete:
      tags:
      - Source Cleanup Controller
      summary: Delete source cleanup report(s) for a given migration ID and report
        name
      operationId: deleteSourceCleanupReport
      parameters:
      - name: migrationId
        in: path
        description: Unique identifier of the Migration object
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reportName
        in: query
        description: filename of the report to be returned
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Source cleanup report successfully deleted
        "404":
          description: Source cleanup report not found for the given Migration ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMigratorRestException'
  /source-cleanup/pauseDelayedDeletionCacheReader:
    post:
      tags:
      - Source Cleanup Controller
      summary: Pause the Delayed Deletion Cache Reader from deleting files
      operationId: pauseDelayedDeletionCacheReader
      responses:
        "200":
          description: Successfully paused the Delayed Deletion Cache Reader
  /source-cleanup/resumeDelayedDeletionCacheReader:
    post:
      tags:
      - Source Cleanup Controller
      summary: Resume the Delayed Deletion Cache Reader
      operationId: resumeDelayedDeletionCacheReader
      responses:
        "200":
          description: Successfully resumed the Delayed Deletion Cache Reader
  /source-cleanup/orphaned-reports:
    get:
      tags:
      - Source Cleanup Controller
      summary: Get a list of the metadata for all orphaned deletion reports
      operationId: getOrphanedCleanupReportsList
      responses:
        "200":
          description: All orphaned source cleanup report metadata request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SourceCleanupReportFileMetadata'
                x-content-type: application/json
components:
  schemas:
    FailedPathsSummary:
      type: object
      properties:
        migrationId:
          type: string
        failedPathCount:
          type: integer
          format: int64
        attemptedTransferCount:
          type: integer
          format: int64
        failureRate:
          type: integer
          format: int64
      example:
        migrationId: id
        failedPathCount: 2
        attemptedTransferCount: 3
        failureRate: 1
    NotificationLevel:
      type: string
      enum:
      - INFO
      - WARN
      - ERROR
    Notification:
      type: object
      properties:
        level:
          $ref: '#/components/schemas/NotificationLevel'
        type:
          type: string
        message:
          type: string
        id:
          type: string
        timeStamp:
          type: integer
          format: int64
        code:
          type: integer
          format: int32
        resolved:
          type: boolean
        updatedTimeStamp:
          type: integer
          format: int64
        payload:
          type: object
          additionalProperties:
            type: object
        dateUpdated:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
      example:
        timeStamp: 0
        code: 6
        dateCreated: 2000-01-23T04:56:07.000+00:00
        level: INFO
        payload:
          key: "{}"
        updatedTimeStamp: 1
        id: id
        type: type
        message: message
        resolved: true
        dateUpdated: 2000-01-23T04:56:07.000+00:00
    NotificationNotFound:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/HttpStatus'
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
        localizedMessage:
          type: string
    SmtpConfiguration:
      type: object
      properties:
        host:
          type: string
          description: Host of the SMTP server
        port:
          type: integer
          description: Port of the SMTP server
          format: int32
        security:
          $ref: '#/components/schemas/SmtpSecurityType'
        email:
          type: string
          description: Email that will be used by notification sender
        auth:
          $ref: '#/components/schemas/SmtpAuth'
        subjectPrefix:
          type: string
          description: Prefix to be added to the e-mail subject
      description: Configuration properties for connection to SMTP server
      example:
        security: SSL
        port: 0
        auth:
          password: password
          authEnabled: true
          login: login
        host: host
        subjectPrefix: subjectPrefix
        email: email
    SmtpSecurityType:
      type: string
      description: Security type of SMTP
      enum:
      - SSL
      - TLS
      - STARTTLS_ENABLED
      - STARTTLS_REQUIRED
      - NONE
    EmailRegistrations:
      required:
      - addresses
      - types
      type: object
      properties:
        types:
          uniqueItems: true
          type: array
          description: Types of notifications that this email should be receiving
          items:
            type: string
        addresses:
          uniqueItems: true
          type: array
          description: Email addresses of receivers
          items:
            type: string
            description: Email addresses of receivers
      description: Notification receiver properties
      example:
        types:
        - HIGH_PENDING_REGION
        - MIGRATION_STARTED
        addresses:
        - email@example.com
        - AntotherEmail@example.com
    MigrationGate:
      type: object
      properties:
        gateId:
          type: string
        gatePath:
          type: string
        actionStatus:
          $ref: '#/components/schemas/GateActionStatus'
        dependantRegions:
          type: integer
          format: int32
        timeCreated:
          type: string
          format: date-time
        complete:
          type: boolean
        lastUpdated:
          type: string
          format: date-time
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        actionStatus: actionStatus
        gateId: gateId
        timeCreated: 2000-01-23T04:56:07.000+00:00
        gatePath: gatePath
        complete: true
        dependantRegions: 7
    LiveMigratorRestException:
      type: object
      properties:
        title:
          type: string
        status:
          type: integer
          format: int32
        error:
          type: integer
          format: int32
        message:
          type: string
    MigrationGateIds:
      type: object
      properties:
        gateIds:
          uniqueItems: true
          type: array
          items:
            type: string
      example:
        gateIds:
        - "1"
        - "2"
        - "3"
        - "4"
        - "5"
    ThreadStates:
      type: object
      properties:
        NEW_THREADS:
          type: integer
          format: int32
        RUNNABLE_THREADS:
          type: integer
          format: int32
        BLOCKED_THREADS:
          type: integer
          format: int32
        WAITING_THREADS:
          type: integer
          format: int32
        TIMED_WAITING_THREADS:
          type: integer
          format: int32
        TERMINATED_THREADS:
          type: integer
          format: int32
        TOTAL_THREADS:
          type: integer
          format: int32
      example:
        WAITING_THREADS: 5
        TIMED_WAITING_THREADS: 5
        TOTAL_THREADS: 7
        RUNNABLE_THREADS: 6
        TERMINATED_THREADS: 2
        NEW_THREADS: 0
        BLOCKED_THREADS: 1
    MigrationPathStatus:
      type: object
      properties:
        migrationId:
          type: string
          description: Migration path is under
        sourcePath:
          type: string
          description: Source path
        targetPath:
          type: string
          description: Target path after being mapped
        pathMappingId:
          type: string
          description: Path mapping applied to path - null if none
        exclusionId:
          type: string
          description: Exclusion applied to path - null if none
        inPendingRegion:
          type: boolean
          description: If path is in a pending region
        scheduled:
          type: boolean
        actionCount:
          type: integer
          description: Number of scheduled actions on path
          format: int32
      description: Status of a path
      example:
        pathMappingId: pathMappingId
        actionCount: 0
        migrationId: migrationId
        exclusionId: exclusionId
        scheduled: true
        targetPath: targetPath
        inPendingRegion: true
        sourcePath: sourcePath
    PreviewInfo:
      type: object
      properties:
        preview/verifications:
          type: string
        preview/backups:
          type: string
      example:
        preview/verifications: preview/verifications
        preview/backups: preview/backups
    BandwidthPolicy:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        limitBytesPerSecond:
          type: integer
          format: int64
      example:
        description: description
        id: id
        limitBytesPerSecond: 5
    FileSizeUnit:
      type: string
      enum:
      - B
      - KB
      - MB
      - GB
      - TB
      - PB
      - KiB
      - MiB
      - GiB
      - TiB
      - PiB
      x-enum-varnames:
      - B
      - KB
      - MB
      - GB
      - TB
      - PB
      - KiB
      - MiB
      - GiB
      - TiB
      - PiB
    S3aFilesystemProperties:
      type: object
      properties:
        accessKey:
          type: string
          description: Access key
        secretKey:
          type: string
          description: Secret key
        credentialsProvider:
          type: string
          description: Credentials Provider
        awsProfile:
          type: string
          description: aws profile
        awsCredentialsConfigFile:
          type: string
          description: path to credentials file with profiles
        bucketName:
          type: string
          description: Bucket Name
        endpoint:
          type: string
          description: s3 endpoint
        additionalProperties:
          type: object
          additionalProperties:
            type: string
            description: Additional filesystem properties
          description: Additional filesystem properties
        sqsQueue:
          type: string
          description: SQS queue used when using s3 as a source
        s3type:
          type: string
          description: Indicates an s3a compatibility filesystem type
        bootstrapServers:
          type: string
          description: "Kafka server, host:port"
        topic:
          type: string
          description: Kafka's topic where s3 object change notifications are provided
        sqsEndpoint:
          type: string
          description: sqs endpoint
        cleanUpSqsQueue:
          type: boolean
          description: ldm will cleanup sqs queue after when the filesystem is deleted
          default: false
      description: S3a filesystem properties
      example:
        bucketName: bucketName
        endpoint: endpoint
        secretKey: secretKey
        accessKey: accessKey
        bootstrapServers: bootstrapServers
        s3type: s3type
        topic: topic
        additionalProperties:
          key: additionalProperties
        sqsQueue: sqsQueue
        credentialsProvider: credentialsProvider
        awsProfile: awsProfile
        awsCredentialsConfigFile: awsCredentialsConfigFile
        sqsEndpoint: sqsEndpoint
        cleanUpSqsQueue: false
    FileSystemConfiguration:
      type: object
      properties:
        fileSystemId:
          type: string
        fsType:
          type: string
        isSource:
          type: boolean
        properties:
          type: object
          additionalProperties:
            type: string
        eventsPosition:
          type: integer
          format: int64
        isScanOnly:
          type: boolean
      example:
        eventsPosition: 5
        isScanOnly: true
        fileSystemId: fileSystemId
        isSource: true
        fsType: fsType
        properties:
          key: properties
      xml:
        name: fileSystemConfiguration
    Exclusion:
      required:
      - type
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        fsRestriction:
          type: boolean
        sourceFsExclusion:
          type: boolean
        globalExclusion:
          type: boolean
        defaultExclusion:
          type: boolean
          deprecated: true
        type:
          type: string
      example:
        fsRestriction: true
        defaultExclusion: true
        description: description
        id: id
        globalExclusion: true
        sourceFsExclusion: true
        type: RegexExclusion
      discriminator:
        propertyName: type
        mapping:
          RegexExclusionDTO: '#/components/schemas/RegexExclusion'
          FileSizeExclusionDTO: '#/components/schemas/FileSizeExclusion'
          DateExclusionDTO: '#/components/schemas/DateExclusion'
    RegexExclusion:
      type: object
      properties:
        patternType:
          $ref: '#/components/schemas/RegexPatternType'
        regex:
          type: string
      allOf:
      - $ref: '#/components/schemas/Exclusion'
    FileSizeExclusion:
      type: object
      properties:
        maxBytes:
          type: integer
          format: int64
        displayUnit:
          type: FileSizeUnit
        maxBytesFormatted:
          type: string
      allOf:
      - $ref: '#/components/schemas/Exclusion'
    DateExclusion:
      type: object
      properties:
        beforeDateEpochMillis:
          type: integer
          format: int64
        beforeDateUtc:
          type: string
      allOf:
      - $ref: '#/components/schemas/Exclusion'
    FailedToDeleteExclusionException:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/HttpStatus'
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
        localizedMessage:
          type: string
    LocalFilesystemProperties:
      type: object
      properties:
        fsRoot:
          type: string
          description: Root path of local file system
        additionalProperties:
          type: object
          additionalProperties:
            type: string
            description: Additional filesystem properties
          description: Additional filesystem properties
      description: Local file system properties
      example:
        fsRoot: fsRoot
        additionalProperties:
          key: additionalProperties
    AllMigrationsRollingStats:
      type: object
      properties:
        timeStampLastUpdateInBucketPeriod:
          type: integer
          format: int64
        bucketPeriod:
          type: string
          enum:
          - SECOND
          - MINUTE
          - HOUR
          - DAY
        migrationStats:
          $ref: '#/components/schemas/MigrationStats'
        timeStampLastUpdateInBucketDate:
          type: string
        startOfBucketPeriodTimeStamp:
          type: integer
          format: int64
        startOfBucketPeriodTimeDate:
          type: string
        filesPerSecondForPeriod:
          type: number
          format: float
        dirsPerSecondForPeriod:
          type: number
          format: float
        rawBytesPerSecondForPeriod:
          type: number
          format: float
        successfulBytesPerSecondForPeriod:
          type: number
          format: float
        fileCountBySizePerSecondForPeriod:
          type: object
          additionalProperties:
            type: integer
            format: int64
      example:
        startOfBucketPeriodTimeStamp: 6
        bucketPeriod: SECOND
        timeStampLastUpdateInBucketPeriod: 0
        startOfBucketPeriodTimeDate: startOfBucketPeriodTimeDate
        successfulBytesPerSecondForPeriod: 2.302136
        timeStampLastUpdateInBucketDate: timeStampLastUpdateInBucketDate
        dirsPerSecondForPeriod: 5.962134
        filesPerSecondForPeriod: 1.4658129
        rawBytesPerSecondForPeriod: 5.637377
        migrationStats:
          filesRescanned: 5
          fileSystemActionsScan: 6
          rawBytesMigratedClient: 9
          successfulBytesMigrated: 6
          filesMigratedClient: 2
          filesMigrated: 6
          filesMigratedScan: 6
          successfulBytesMigratedClientScan: 1
          filesExcluded: 1
          dirsMigratedScan: 1
          fileSystemAction: 9
          dirsMigratedClientScan: 4
          rawBytesMigratedScan: 5
          rawBytesMigratedClientScan: 7
          dirsExcluded: 6
          dirsMigratedClient: 7
          filesMigratedClientScan: 2
          filesScanned: 1
          successfulBytesMigratedScan: 5
          rawBytesMigrated: 8
          successfulBytesMigratedClient: 3
          fileCountBySize:
            key: 9
          bytesExcluded: 1
          eventsExcluded: 7
          dirsMigrated: 3
          dirsRescanned: 9
          dirsScanned: 4
        fileCountBySizePerSecondForPeriod:
          key: 7
    MigrationRecord:
      type: object
      properties:
        migrationId:
          type: string
        timeStamp:
          type: integer
          format: int64
        migrationStats:
          $ref: '#/components/schemas/MigrationStats'
      example:
        timeStamp: 0
        migrationId: migrationId
        migrationStats:
          filesRescanned: 5
          fileSystemActionsScan: 6
          rawBytesMigratedClient: 9
          successfulBytesMigrated: 6
          filesMigratedClient: 2
          filesMigrated: 6
          filesMigratedScan: 6
          successfulBytesMigratedClientScan: 1
          filesExcluded: 1
          dirsMigratedScan: 1
          fileSystemAction: 9
          dirsMigratedClientScan: 4
          rawBytesMigratedScan: 5
          rawBytesMigratedClientScan: 7
          dirsExcluded: 6
          dirsMigratedClient: 7
          filesMigratedClientScan: 2
          filesScanned: 1
          successfulBytesMigratedScan: 5
          rawBytesMigrated: 8
          successfulBytesMigratedClient: 3
          fileCountBySize:
            key: 9
          bytesExcluded: 1
          eventsExcluded: 7
          dirsMigrated: 3
          dirsRescanned: 9
          dirsScanned: 4
    ThroughputSummary:
      type: object
      properties:
        last10Secs:
          $ref: '#/components/schemas/ThroughputBucket'
        last60Secs:
          $ref: '#/components/schemas/ThroughputBucket'
        last300Secs:
          $ref: '#/components/schemas/ThroughputBucket'
        last1800Secs:
          $ref: '#/components/schemas/ThroughputBucket'
      example:
        last60Secs:
          scannedFiles: 1
          totalFilesBySize:
            key: 2
          excludedFiles: 9
          rescannedDirs: 7
          rescannedFiles: 4
          scannedDirs: 1
          peakFilesBySize:
            key: 5
          excludedDirs: 3
          excludedBytes: 7
          peakBytes: 0
          totalBytes: 1
          excludedEvents: 2
          totalFiles: 5
          peakFiles: 6
        last300Secs:
          scannedFiles: 1
          totalFilesBySize:
            key: 2
          excludedFiles: 9
          rescannedDirs: 7
          rescannedFiles: 4
          scannedDirs: 1
          peakFilesBySize:
            key: 5
          excludedDirs: 3
          excludedBytes: 7
          peakBytes: 0
          totalBytes: 1
          excludedEvents: 2
          totalFiles: 5
          peakFiles: 6
        last10Secs:
          scannedFiles: 1
          totalFilesBySize:
            key: 2
          excludedFiles: 9
          rescannedDirs: 7
          rescannedFiles: 4
          scannedDirs: 1
          peakFilesBySize:
            key: 5
          excludedDirs: 3
          excludedBytes: 7
          peakBytes: 0
          totalBytes: 1
          excludedEvents: 2
          totalFiles: 5
          peakFiles: 6
        last1800Secs:
          scannedFiles: 1
          totalFilesBySize:
            key: 2
          excludedFiles: 9
          rescannedDirs: 7
          rescannedFiles: 4
          scannedDirs: 1
          peakFilesBySize:
            key: 5
          excludedDirs: 3
          excludedBytes: 7
          peakBytes: 0
          totalBytes: 1
          excludedEvents: 2
          totalFiles: 5
          peakFiles: 6
    ThroughputBucket:
      type: object
      properties:
        peakBytes:
          type: integer
          format: int64
        peakFiles:
          type: integer
          format: int64
        totalBytes:
          type: integer
          format: int64
        totalFiles:
          type: integer
          format: int64
        peakFilesBySize:
          type: object
          additionalProperties:
            type: integer
            format: int64
        totalFilesBySize:
          type: object
          additionalProperties:
            type: integer
            format: int64
        excludedBytes:
          type: integer
          format: int64
        excludedFiles:
          type: integer
          format: int64
        excludedDirs:
          type: integer
          format: int64
        excludedEvents:
          type: integer
          format: int64
        rescannedFiles:
          type: integer
          format: int64
        rescannedDirs:
          type: integer
          format: int64
        scannedFiles:
          type: integer
          format: int64
        scannedDirs:
          type: integer
          format: int64
      example:
        scannedFiles: 1
        totalFilesBySize:
          key: 2
        excludedFiles: 9
        rescannedDirs: 7
        rescannedFiles: 4
        scannedDirs: 1
        peakFilesBySize:
          key: 5
        excludedDirs: 3
        excludedBytes: 7
        peakBytes: 0
        totalBytes: 1
        excludedEvents: 2
        totalFiles: 5
        peakFiles: 6
    MigrationsSummary:
      type: object
      properties:
        overallCount:
          type: integer
          format: int32
        running:
          $ref: '#/components/schemas/MigrationInfoList'
        ready:
          $ref: '#/components/schemas/MigrationInfoList'
        stopped:
          $ref: '#/components/schemas/MigrationInfoList'
        live:
          $ref: '#/components/schemas/MigrationInfoList'
        migrationStats:
          type: array
          items:
            $ref: '#/components/schemas/MigrationRecord'
        completed:
          $ref: '#/components/schemas/MigrationInfoList'
        waitingForNextRecurrence:
          $ref: '#/components/schemas/MigrationInfoList'
        recurrenceScheduled:
          $ref: '#/components/schemas/MigrationInfoList'
      example:
        running:
          migrations:
          - internalId: internalId
            path: path
            pathRetryCount: 6
            progress:
              dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
              migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
              migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
              dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
              migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
              migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
              migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
              duration:
                inSeconds: 9
                asText: asText
              dataMigratedDueToScan: 3
              migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
              totalBytes: 1
              overallProgressSentReadableValue: overallProgressSentReadableValue
              migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
              migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
              etaEstimate:
                inSeconds: 9
                asText: asText
              overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
              migratedPercentage: 2
              totalScannedBytes: 4
              migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
              migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
              totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
              excludedBytes: 5
              overallProgressSentValue: 2
              migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
              totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
              migratedBytes: 5
              totalMigratedBytes: 7
              migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
              migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
              migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
            id: id
          - internalId: internalId
            path: path
            pathRetryCount: 6
            progress:
              dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
              migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
              migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
              dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
              migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
              migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
              migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
              duration:
                inSeconds: 9
                asText: asText
              dataMigratedDueToScan: 3
              migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
              totalBytes: 1
              overallProgressSentReadableValue: overallProgressSentReadableValue
              migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
              migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
              etaEstimate:
                inSeconds: 9
                asText: asText
              overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
              migratedPercentage: 2
              totalScannedBytes: 4
              migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
              migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
              totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
              excludedBytes: 5
              overallProgressSentValue: 2
              migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
              totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
              migratedBytes: 5
              totalMigratedBytes: 7
              migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
              migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
              migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
            id: id
          count: 7
        stopped:
          migrations:
          - internalId: internalId
            path: path
            pathRetryCount: 6
            progress:
              dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
              migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
              migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
              dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
              migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
              migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
              migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
              duration:
                inSeconds: 9
                asText: asText
              dataMigratedDueToScan: 3
              migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
              totalBytes: 1
              overallProgressSentReadableValue: overallProgressSentReadableValue
              migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
              migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
              etaEstimate:
                inSeconds: 9
                asText: asText
              overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
              migratedPercentage: 2
              totalScannedBytes: 4
              migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
              migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
              totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
              excludedBytes: 5
              overallProgressSentValue: 2
              migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
              totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
              migratedBytes: 5
              totalMigratedBytes: 7
              migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
              migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
              migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
            id: id
          - internalId: internalId
            path: path
            pathRetryCount: 6
            progress:
              dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
              migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
              migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
              dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
              migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
              migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
              migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
              duration:
                inSeconds: 9
                asText: asText
              dataMigratedDueToScan: 3
              migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
              totalBytes: 1
              overallProgressSentReadableValue: overallProgressSentReadableValue
              migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
              migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
              etaEstimate:
                inSeconds: 9
                asText: asText
              overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
              migratedPercentage: 2
              totalScannedBytes: 4
              migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
              migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
              totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
              excludedBytes: 5
              overallProgressSentValue: 2
              migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
              totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
              migratedBytes: 5
              totalMigratedBytes: 7
              migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
              migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
              migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
            id: id
          count: 7
        overallCount: 0
        ready:
          migrations:
          - internalId: internalId
            path: path
            pathRetryCount: 6
            progress:
              dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
              migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
              migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
              dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
              migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
              migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
              migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
              duration:
                inSeconds: 9
                asText: asText
              dataMigratedDueToScan: 3
              migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
              totalBytes: 1
              overallProgressSentReadableValue: overallProgressSentReadableValue
              migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
              migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
              etaEstimate:
                inSeconds: 9
                asText: asText
              overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
              migratedPercentage: 2
              totalScannedBytes: 4
              migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
              migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
              totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
              excludedBytes: 5
              overallProgressSentValue: 2
              migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
              totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
              migratedBytes: 5
              totalMigratedBytes: 7
              migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
              migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
              migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
            id: id
          - internalId: internalId
            path: path
            pathRetryCount: 6
            progress:
              dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
              migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
              migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
              dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
              migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
              migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
              migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
              duration:
                inSeconds: 9
                asText: asText
              dataMigratedDueToScan: 3
              migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
              totalBytes: 1
              overallProgressSentReadableValue: overallProgressSentReadableValue
              migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
              migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
              etaEstimate:
                inSeconds: 9
                asText: asText
              overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
              migratedPercentage: 2
              totalScannedBytes: 4
              migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
              migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
              totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
              excludedBytes: 5
              overallProgressSentValue: 2
              migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
              totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
              migratedBytes: 5
              totalMigratedBytes: 7
              migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
              migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
              migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
            id: id
          count: 7
        completed:
          migrations:
          - internalId: internalId
            path: path
            pathRetryCount: 6
            progress:
              dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
              migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
              migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
              dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
              migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
              migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
              migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
              duration:
                inSeconds: 9
                asText: asText
              dataMigratedDueToScan: 3
              migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
              totalBytes: 1
              overallProgressSentReadableValue: overallProgressSentReadableValue
              migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
              migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
              etaEstimate:
                inSeconds: 9
                asText: asText
              overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
              migratedPercentage: 2
              totalScannedBytes: 4
              migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
              migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
              totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
              excludedBytes: 5
              overallProgressSentValue: 2
              migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
              totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
              migratedBytes: 5
              totalMigratedBytes: 7
              migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
              migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
              migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
            id: id
          - internalId: internalId
            path: path
            pathRetryCount: 6
            progress:
              dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
              migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
              migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
              dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
              migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
              migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
              migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
              duration:
                inSeconds: 9
                asText: asText
              dataMigratedDueToScan: 3
              migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
              totalBytes: 1
              overallProgressSentReadableValue: overallProgressSentReadableValue
              migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
              migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
              etaEstimate:
                inSeconds: 9
                asText: asText
              overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
              migratedPercentage: 2
              totalScannedBytes: 4
              migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
              migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
              totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
              excludedBytes: 5
              overallProgressSentValue: 2
              migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
              totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
              migratedBytes: 5
              totalMigratedBytes: 7
              migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
              migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
              migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
            id: id
          count: 7
        live:
          migrations:
          - internalId: internalId
            path: path
            pathRetryCount: 6
            progress:
              dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
              migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
              migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
              dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
              migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
              migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
              migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
              duration:
                inSeconds: 9
                asText: asText
              dataMigratedDueToScan: 3
              migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
              totalBytes: 1
              overallProgressSentReadableValue: overallProgressSentReadableValue
              migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
              migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
              etaEstimate:
                inSeconds: 9
                asText: asText
              overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
              migratedPercentage: 2
              totalScannedBytes: 4
              migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
              migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
              totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
              excludedBytes: 5
              overallProgressSentValue: 2
              migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
              totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
              migratedBytes: 5
              totalMigratedBytes: 7
              migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
              migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
              migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
            id: id
          - internalId: internalId
            path: path
            pathRetryCount: 6
            progress:
              dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
              migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
              migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
              dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
              migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
              migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
              migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
              duration:
                inSeconds: 9
                asText: asText
              dataMigratedDueToScan: 3
              migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
              totalBytes: 1
              overallProgressSentReadableValue: overallProgressSentReadableValue
              migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
              migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
              etaEstimate:
                inSeconds: 9
                asText: asText
              overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
              migratedPercentage: 2
              totalScannedBytes: 4
              migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
              migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
              totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
              excludedBytes: 5
              overallProgressSentValue: 2
              migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
              totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
              migratedBytes: 5
              totalMigratedBytes: 7
              migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
              migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
              migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
            id: id
          count: 7
          waitingForNextRecurrence:
            migrations:
            - internalId: internalId
              path: path
              recurring: true
              recurringPeriodSeconds: 43200
              pathRetryCount: 6
              progress:
                dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
                migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
                migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
                dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
                migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
                migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
                migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
                duration:
                  inSeconds: 9
                  asText: asText
                dataMigratedDueToScan: 3
                migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
                totalBytes: 1
                overallProgressSentReadableValue: overallProgressSentReadableValue
                migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
                migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
                etaEstimate:
                  inSeconds: 9
                  asText: asText
                overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
                migratedPercentage: 2
                totalScannedBytes: 4
                migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
                migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
                totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
                excludedBytes: 5
                overallProgressSentValue: 2
                migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
                totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
                migratedBytes: 5
                totalMigratedBytes: 7
                migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
                migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
                migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
              id: id
            - internalId: internalId
              path: path
              recurring: true
              recurringPeriodSeconds: 43200
              pathRetryCount: 6
              progress:
                dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
                migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
                migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
                dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
                migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
                migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
                migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
                duration:
                  inSeconds: 9
                  asText: asText
                dataMigratedDueToScan: 3
                migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
                totalBytes: 1
                overallProgressSentReadableValue: overallProgressSentReadableValue
                migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
                migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
                etaEstimate:
                  inSeconds: 9
                  asText: asText
                overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
                migratedPercentage: 2
                totalScannedBytes: 4
                migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
                migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
                totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
                excludedBytes: 5
                overallProgressSentValue: 2
                migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
                totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
                migratedBytes: 5
                totalMigratedBytes: 7
                migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
                migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
                migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
              id: id
            count: 7
            recurrenceScheduled:
              migrations:
              - internalId: internalId
                path: path
                recurring: true
                recurringPeriodSeconds: 43200
                pathRetryCount: 6
                progress:
                  dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
                  migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
                  migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
                  dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
                  migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
                  migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
                  migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
                  duration:
                    inSeconds: 9
                    asText: asText
                  dataMigratedDueToScan: 3
                  migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
                  totalBytes: 1
                  overallProgressSentReadableValue: overallProgressSentReadableValue
                  migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
                  migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
                  etaEstimate:
                    inSeconds: 9
                    asText: asText
                  overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
                  migratedPercentage: 2
                  totalScannedBytes: 4
                  migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
                  migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
                  totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
                  excludedBytes: 5
                  overallProgressSentValue: 2
                  migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
                  totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
                  migratedBytes: 5
                  totalMigratedBytes: 7
                  migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
                  migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
                  migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
                id: id
              - internalId: internalId
                path: path
                recurring: true
                recurringPeriodSeconds: 43200
                pathRetryCount: 6
                progress:
                  dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
                  migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
                  migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
                  dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
                  migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
                  migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
                  migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
                  duration:
                    inSeconds: 9
                    asText: asText
                  dataMigratedDueToScan: 3
                  migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
                  totalBytes: 1
                  overallProgressSentReadableValue: overallProgressSentReadableValue
                  migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
                  migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
                  etaEstimate:
                    inSeconds: 9
                    asText: asText
                  overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
                  migratedPercentage: 2
                  totalScannedBytes: 4
                  migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
                  migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
                  totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
                  excludedBytes: 5
                  overallProgressSentValue: 2
                  migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
                  totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
                  migratedBytes: 5
                  totalMigratedBytes: 7
                  migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
                  migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
                  migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
                id: id
              count: 7
    MigrationInfo:
      type: object
      properties:
        internalId:
          type: string
        pathRetryCount:
          type: integer
          format: int64
        id:
          type: string
        path:
          type: string
        progress:
          $ref: '#/components/schemas/MigrationProgress'
      example:
        internalId: internalId
        path: path
        pathRetryCount: 6
        progress:
          dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
          migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
          migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
          dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
          migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
          migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
          migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
          duration:
            inSeconds: 9
            asText: asText
          dataMigratedDueToScan: 3
          migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
          totalBytes: 1
          overallProgressSentReadableValue: overallProgressSentReadableValue
          migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
          migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
          etaEstimate:
            inSeconds: 9
            asText: asText
          overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
          migratedPercentage: 2
          totalScannedBytes: 4
          migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
          migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
          totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
          excludedBytes: 5
          overallProgressSentValue: 2
          migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
          totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
          migratedBytes: 5
          totalMigratedBytes: 7
          migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
          migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
          migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
        id: id
    FileTrackerPercentiles:
      type: object
      properties:
        type:
          type: string
        successfulFileCount:
          type: integer
          format: int32
        failedFileCount:
          type: integer
          format: int32
        fileTrackerPercentile:
          type: array
          items:
            $ref: '#/components/schemas/FileTrackerPercentile'
      example:
        successfulFileCount: 0
        fileTrackerPercentile:
        - percentile: 1
          value: 5
        - percentile: 1
          value: 5
        failedFileCount: 6
        type: type
    FileTrackerPercentile:
      type: object
      properties:
        percentile:
          type: integer
          format: int32
        value:
          type: integer
          format: int64
      example:
        percentile: 1
        value: 5
    FileTracker:
      type: object
      properties:
        MigrationId:
          type: string
        StatsType:
          type: string
          enum:
          - ROOT_SCAN
          - CLIENT_ACTIVITY
          - CLIENT_ACTIVITY_ROOT_SCAN
        Path:
          type: string
        FileLength:
          type: integer
          format: int64
        TransferId:
          type: integer
          format: int64
        DataAgentName:
          type: string
        AttemptCount:
          type: integer
          format: int64
        Thread:
          type: string
        StartTime:
          type: integer
          format: int64
        CompleteTime:
          type: integer
          format: int64
        SourceEventCreationTimeStamp:
          type: integer
          format: int64
        LdmEventCreationTimeStamp:
          type: integer
          format: int64
        EventLatency:
          type: integer
          format: int64
        BytesTransferred:
          type: integer
          format: int64
        LastUpdate:
          type: integer
          format: int64
        TimeBetweenUpdates:
          type: integer
          format: int64
        UpdateCount:
          type: integer
          format: int64
        IsSuccessful:
          type: boolean
        Buckets:
          type: array
          items:
            $ref: '#/components/schemas/FileTrackerBucket'
        BytesPerSecond:
          type: integer
          format: int64
        IsComplete:
          type: boolean
        IncomingTransportBytes:
          type: integer
          format: int64
        OutgoingTransportBytes:
          type: integer
          format: int64
        DataTransferTiming:
          $ref: '#/components/schemas/DataTransferTiming'
      example:
        Path: Path
        LastUpdate: 7
        BytesTransferred: 2
        StartTime: 5
        UpdateCount: 3
        MigrationId: MigrationId
        DataAgentName: myAgent
        IsComplete: true
        Buckets:
        - BytesForSecond: 4
          Second: 2
        - BytesForSecond: 4
          Second: 2
        FileLength: 0
        Thread: Thread
        AttemptCount: 1
        TimeBetweenUpdates: 9
        BytesPerSecond: 7
        StatsType: ROOT_SCAN
        TransferId: 6
        CompleteTime: 5
        IsSuccessful: true
        IncomingTransportBytes: 324
        OutgoingTransportBytes: 1681
        DataTransferTiming:
          FileTransferNetworkOverheadNs: 23453234
          TotalFileTransferTimeNs: 1184700517
          FileTransferPreparingReportTimeNs: 207780
          SrcFsMapTimeNs: 3828
          TgtFsMapTimeNs: 880
          SrcFsInitTimeNs: 4512
          TgtFsInitTimeNs: 966
          FileStatusRetrievingTimeNs: 18092179
          FileTransferTimeNs: 1184610517
          SrcInStreamOpenTimeNs: 34562
          TgtOutStreamOpenTimeNs: 3462
          SrcInStreamCloseTimeNs: 5467
          TgtOutStreamCloseTimeNs: 4573
          SrcInStreamBytesReadTimeNs: 2346234
          TgtOutStreamBytesWriteTimeNs: 1181264283
    FileTrackerBucket:
      type: object
      properties:
        Second:
          type: integer
          format: int64
        BytesForSecond:
          type: integer
          format: int64
      example:
        BytesForSecond: 4
        Second: 2
    DataTransferTiming:
      type: object
      properties:
        FileTransferNetworkOverheadNs:
          type: integer
          description: Time to send and retrieve request/response to/from DTA on migrating
            file
          format: int64
        TotalFileTransferTimeNs:
          type: integer
          description: |
            Total time of a file migration on DTA side, the time measured from the start of grpc-method execution to transfer the file and to
            the time when FINISHED report will be sent to the lm2 side
          format: int64
        FileTransferPreparingReportTimeNs:
          type: integer
          description: Time of reporting of PREPARING state of the file migration
            on data agent side in nanoseconds
          format: int64
        SrcFsMapTimeNs:
          type: integer
          description: Time to map source fs from a data transfer request to a real
            internal one in nanoseconds
          format: int64
        TgtFsMapTimeNs:
          type: integer
          description: Time to map target fs from a data transfer request to a real
            internal one in nanoseconds
          format: int64
        SrcFsInitTimeNs:
          type: integer
          description: Time to initialize a source filesystem in nanoseconds
          format: int64
        TgtFsInitTimeNs:
          type: integer
          description: Time to initialize a target filesystem in nanoseconds
          format: int64
        FileStatusRetrievingTimeNs:
          type: integer
          description: Time to get file status info from the source filesystem in
            nanoseconds
          format: int64
        FileTransferTimeNs:
          type: integer
          description: Time to copy filer from the source to the target on data-agent
            side in nanoseconds
          format: int64
        SrcInStreamOpenTimeNs:
          type: integer
          description: Time of opening of the source fs input stream to read the data
            that will be migrated
          format: int64
        TgtOutStreamOpenTimeNs:
          type: integer
          description: Time of opening of the target fs output stream where the data
            will be migrated to
          format: int64
        SrcInStreamCloseTimeNs:
          type: integer
          description: |
            Time of closing of the source fs input stream after migrating the data or on happening some exceptions on the file transferring
          format: int64
        TgtOutStreamCloseTimeNs:
          type: integer
          description: Time of closing of the target fs output stream after migrating
            the data
          format: int64
        SrcInStreamBytesReadTimeNs:
          type: integer
          description: Total time that was spent to read bytes from source fs input
            stream
          format: int64
        TgtOutStreamBytesWriteTimeNs:
          type: integer
          description: Total time that was spent to write bytes to target fs output
            stream
          format: int64
      example:
        FileTransferNetworkOverheadNs: 23453234
        TotalFileTransferTimeNs: 1184700517
        FileTransferPreparingReportTimeNs: 207780
        SrcFsMapTimeNs: 3828
        TgtFsMapTimeNs: 880
        SrcFsInitTimeNs: 4512
        TgtFsInitTimeNs: 966
        FileStatusRetrievingTimeNs: 18092179
        FileTransferTimeNs: 1184610517
        SrcInStreamOpenTimeNs: 34562
        TgtOutStreamOpenTimeNs: 3462
        SrcInStreamCloseTimeNs: 5467
        TgtOutStreamCloseTimeNs: 4573
        SrcInStreamBytesReadTimeNs: 2346234
        TgtOutStreamBytesWriteTimeNs: 1181264283
    EnrichedMigratorEvent:
      type: object
      properties:
        eventType:
          type: string
          enum:
          - SCANNED
          - RESCAN
          - CLOSE
          - CREATE
          - UNLINK
          - RENAME
          - FINISH
          - ABORT
          - MARKER
          - METADATA
          - DUMMY
          - RESCAN_UNLINK
        srcPath:
          type: string
        destPath:
          type: string
        fileSize:
          type: integer
          format: int64
        migrationId:
          type: string
        targetFsType:
          type: string
        excluded:
          type: boolean
        excludedSource:
          type: boolean
        excludedTarget:
          type: boolean
      example:
        excluded: true
        migrationId: migrationId
        excludedSource: true
        excludedTarget: true
        fileSize: 0
        targetFsType: targetFsType
        srcPath: srcPath
        destPath: destPath
        eventType: SCANNED
    MigrationStats:
      type: object
      properties:
        filesMigratedScan:
          type: integer
          format: int64
        dirsMigratedScan:
          type: integer
          format: int64
        rawBytesMigratedScan:
          type: integer
          format: int64
        successfulBytesMigratedScan:
          type: integer
          format: int64
        filesMigratedClient:
          type: integer
          format: int64
        dirsMigratedClient:
          type: integer
          format: int64
        rawBytesMigratedClient:
          type: integer
          format: int64
        successfulBytesMigratedClient:
          type: integer
          format: int64
        filesMigratedClientScan:
          type: integer
          format: int64
        dirsMigratedClientScan:
          type: integer
          format: int64
        rawBytesMigratedClientScan:
          type: integer
          format: int64
        successfulBytesMigratedClientScan:
          type: integer
          format: int64
        bytesExcluded:
          type: integer
          format: int64
        filesExcluded:
          type: integer
          format: int64
        dirsExcluded:
          type: integer
          format: int64
        eventsExcluded:
          type: integer
          format: int64
        filesScanned:
          type: integer
          format: int64
        dirsScanned:
          type: integer
          format: int64
        filesRescanned:
          type: integer
          format: int64
        dirsRescanned:
          type: integer
          format: int64
        fileCountBySize:
          type: object
          additionalProperties:
            type: integer
            format: int64
        successfulBytesMigrated:
          type: integer
          format: int64
        rawBytesMigrated:
          type: integer
          format: int64
        fileSystemAction:
          type: integer
          format: int64
        fileSystemActionsScan:
          type: integer
          format: int64
        dirsMigrated:
          type: integer
          format: int64
        filesMigrated:
          type: integer
          format: int64
        incomingTransportBytes:
          type: integer
          format: int64
          default: 0
        outgoingTransportBytes:
          type: integer
          format: int64
          default: 0
      example:
        filesRescanned: 5
        fileSystemActionsScan: 6
        rawBytesMigratedClient: 9
        successfulBytesMigrated: 6
        filesMigratedClient: 2
        filesMigrated: 6
        filesMigratedScan: 6
        successfulBytesMigratedClientScan: 1
        filesExcluded: 1
        dirsMigratedScan: 1
        fileSystemAction: 9
        dirsMigratedClientScan: 4
        rawBytesMigratedScan: 5
        rawBytesMigratedClientScan: 7
        dirsExcluded: 6
        dirsMigratedClient: 7
        filesMigratedClientScan: 2
        filesScanned: 1
        successfulBytesMigratedScan: 5
        rawBytesMigrated: 8
        successfulBytesMigratedClient: 3
        fileCountBySize:
          key: 9
        bytesExcluded: 1
        eventsExcluded: 7
        dirsMigrated: 3
        dirsRescanned: 9
        dirsScanned: 4
        incomingTransportBytes: 23
        outgoingTransportBytes: 346
    OverallDataAgentStatsHistory:
      type: object
      properties:
        dataAgentStatsRecordEntity:
          type: array
          items:
            $ref: '#/components/schemas/DataAgentStatsHistory'
      example:
        dataAgentStatsRecordEntity:
        - totalAgentStats: null
          agentName: agentName
          dataAgentStatsRecordStore:
            dailyRecords:
            - null
            - null
            secondRecords:
            - timeStamp: 0
              RecordPeriod: RecordPeriod
              stats:
                transferredBytes: 1500
                transferredFiles: 5
                transferFailures: 1
                incomingTransportBytes: 7000
                outgoingTransportBytes: 140
            - timeStamp: 0
              RecordPeriod: RecordPeriod
              stats:
                transferredBytes: 1500
                transferredFiles: 5
                transferFailures: 1
                incomingTransportBytes: 7000
                outgoingTransportBytes: 140
            hourlyRecords:
            - null
            - null
            minuteRecords:
            - null
            - null
        - totalAgentStats: null
          agentName: agentName
          dataAgentStatsRecordStore:
            dailyRecords:
            - null
            - null
            secondRecords:
            - timeStamp: 0
              RecordPeriod: RecordPeriod
              stats:
                transferredBytes: 1500
                transferredFiles: 5
                transferFailures: 1
                incomingTransportBytes: 7000
                outgoingTransportBytes: 140
            - timeStamp: 0
              RecordPeriod: RecordPeriod
              stats:
                transferredBytes: 1500
                transferredFiles: 5
                transferFailures: 1
                incomingTransportBytes: 7000
                outgoingTransportBytes: 140
            hourlyRecords:
            - null
            - null
            minuteRecords:
            - null
            - null
    DataAgentStatsHistory:
      type: object
      properties:
        agentName:
          type: string
        dataAgentStatsRecordStore:
          $ref: '#/components/schemas/DataAgentStatsRecordStore'
        totalAgentStats:
          $ref: '#/components/schemas/DataAgentStats'
      example:
        totalAgentStats: null
        agentName: agentName
        dataAgentStatsRecordStore:
          dailyRecords:
          - null
          - null
          secondRecords:
          - timeStamp: 0
            RecordPeriod: RecordPeriod
            stats:
              transferredBytes: 1500
              transferredFiles: 5
              transferFailures: 1
              incomingTransportBytes: 7000
              outgoingTransportBytes: 140
          - timeStamp: 0
            RecordPeriod: RecordPeriod
            stats:
              transferredBytes: 1500
              transferredFiles: 5
              transferFailures: 1
              incomingTransportBytes: 7000
              outgoingTransportBytes: 140
          hourlyRecords:
          - null
          - null
          minuteRecords:
          - null
          - null
    DataAgentStatsRecordStore:
      type: object
      properties:
        secondRecords:
          type: array
          items:
            $ref: '#/components/schemas/DataAgentStatsRecord'
        minuteRecords:
          type: array
          items:
            $ref: '#/components/schemas/DataAgentStatsRecord'
        hourlyRecords:
          type: array
          items:
            $ref: '#/components/schemas/DataAgentStatsRecord'
        dailyRecords:
          type: array
          items:
            $ref: '#/components/schemas/DataAgentStatsRecord'
      example:
        dailyRecords:
        - null
        - null
        secondRecords:
        - timeStamp: 0
          RecordPeriod: RecordPeriod
          stats:
            transferredBytes: 1500
            transferredFiles: 5
            transferFailures: 1
            incomingTransportBytes: 7000
            outgoingTransportBytes: 140
        - timeStamp: 0
          RecordPeriod: RecordPeriod
          stats:
            transferredBytes: 1500
            transferredFiles: 5
            transferFailures: 1
            incomingTransportBytes: 7000
            outgoingTransportBytes: 140
        hourlyRecords:
        - null
        - null
        minuteRecords:
        - null
        - null
    DataAgentStatsRecord:
      type: object
      properties:
        timeStamp:
          type: integer
          format: int64
        stats:
          $ref: '#/components/schemas/DataAgentStats'
        RecordPeriod:
          type: string
      example:
        timeStamp: 0
        RecordPeriod: RecordPeriod
        stats:
          transferredBytes: 1500
          transferredFiles: 5
          transferFailures: 1
          incomingTransportBytes: 7000
          outgoingTransportBytes: 140
    DataAgentStats:
      type: object
      properties:
        transferredBytes:
          type: integer
          format: int64
        transferredFiles:
          type: integer
          format: int64
        transferFailures:
          type: integer
          format: int64
        incomingTransportBytes:
          type: integer
          format: int64
        outgoingTransportBytes:
          type: integer
          format: int64
      example:
        transferredBytes: 1500
        transferredFiles: 5
        transferFailures: 1
        incomingTransportBytes: 7000
        outgoingTransportBytes: 140
    DataAgentStatsSummary:
      type: object
      properties:
        lastWeekTotalBytes:
          type: integer
          format: int64
        lastDayTotalBytes:
          type: integer
          format: int64
        agentName:
          type: string
      example:
        lastWeekTotalBytes: 1025
        lastDayTotalBytes: 9700
        agentName: myAgent
    PathMapping:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        sourceFileSystem:
          type: string
        sourcePath:
          type: string
        targetFileSystem:
          type: string
        targetPath:
          type: string
      example:
        targetFileSystem: targetFileSystem
        description: description
        targetPath: targetPath
        id: id
        sourcePath: sourcePath
        sourceFileSystem: sourceFileSystem
    PathMappingNotFoundException:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/HttpStatus'
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
        localizedMessage:
          type: string
    Adls2ServicePrincipalFilesystemProperties:
      type: object
      properties:
        accountName:
          type: string
          description: Storage account name
        oauthClientId:
          type: string
          description: OAuth Client ID
        oauthClientSecret:
          type: string
          description: OAuth Client Secret
        oauthClientEndpoint:
          type: string
          description: OAuth Client Endpoint
        containerName:
          type: string
          description: Container name
        endpoint:
          type: string
          description: Adls2 endpoint for current account
          default: dfs.core.windows.net
        insecure:
          type: boolean
          description: Insecure connection using abfs scheme
          default: false
        additionalProperties:
          type: object
          additionalProperties:
            type: string
            description: Additional filesystem properties
          description: Additional filesystem properties
      description: "ADLS2 file system properties, with service principal authentication"
      example:
        endpoint: dfs.core.windows.net
        oauthClientId: oauthClientId
        accountName: accountName
        oauthClientEndpoint: oauthClientEndpoint
        containerName: containerName
        insecure: false
        oauthClientSecret: oauthClientSecret
        additionalProperties:
          fs.azure.concurrentRequestCount.in: "4"
          fs.azure.write.request.size: "16384"
    Adls2SharedKeyFilesystemProperties:
      type: object
      properties:
        accountName:
          type: string
          description: Storage account name
        sharedKey:
          type: string
          description: Shared key
        containerName:
          type: string
          description: Container name
        insecure:
          type: boolean
          description: Insecure connection using abfs scheme
          default: false
        endpoint:
          type: string
          description: Adls2 endpoint for current account
          default: dfs.core.windows.net
        additionalProperties:
          type: object
          additionalProperties:
            type: string
            description: Additional filesystem properties
          description: Additional filesystem properties
      description: "ADLS2 file system properties, with shared key authentication"
      example:
        sharedKey: sharedKey
        endpoint: dfs.core.windows.net
        accountName: accountName
        containerName: containerName
        insecure: false
        additionalProperties:
          fs.azure.concurrentRequestCount.in: "4"
          fs.azure.write.request.size: "16384"
    HdfsFilesystemProperties:
      type: object
      properties:
        defaultFS:
          type: string
          description: Default filesystem
        user:
          type: string
          description: FileSystem username to perform migration actions as
        kerberosPrincipal:
          type: string
          description: Kerberos principal
        kerberosKeyTab:
          type: string
          description: Kerberos keytab location
        successFile:
          type: string
          description: Success File GLOB pattern
        additionalProperties:
          type: object
          additionalProperties:
            type: string
            description: Additional filesystem properties
          description: Additional filesystem properties
      description: HDFS file system properties
      example:
        kerberosKeyTab: /etc/security/keytabs/hdfs.keytab
        defaultFS: hdfs://localhost:8020
        additionalProperties:
          key: additionalProperties
        user: hdfs
        kerberosPrincipal: hdfs
        successFile: '**_SUCCESSFILE_'
    FileSystemHealthStatus:
      type: object
      properties:
        fsId:
          type: string
        healthy:
          type: boolean
        timeStampEpochMillis:
          type: integer
          format: int64
        cause:
          type: string
        healthReason:
          type: string
          enum:
          - NONE
          - INVALID_FS_ROOT
          - FS_ERROR
          - INVALID_CREDENTIALS
      example:
        timeStampEpochMillis: 0
        healthReason: NONE
        healthy: true
        fsId: fsId
        cause: cause
    GcsFilesystemProperties:
      required:
      - bucketName
      type: object
      properties:
        jsonKeyFile:
          type: string
          description: JSON KeyFile location for GCS filesystem
        p12KeyFile:
          type: string
          description: P12 KeyFile location for GCS filesystem
        bucketName:
          type: string
          description: GCS Bucket Name
        privateKey:
          type: string
          description: GCS Private key
        privateKeyId:
          type: string
          description: GCS Private key id
        clientEmail:
          type: string
          description: GCS Service Account Email
        additionalProperties:
          type: object
          additionalProperties:
            type: string
            description: Additional filesystem properties
          description: Additional filesystem properties
      description: Target file system properties
      example:
        bucketName: bucketName
        privateKey: privateKey
        clientEmail: clientEmail
        p12KeyFile: p12KeyFile
        jsonKeyFile: jsonKeyFile
        additionalProperties:
          key: additionalProperties
        privateKeyId: privateKeyId
    MultipartGcsWithP12KeyFileBody:
      required:
      - file
      - fsProperties
      type: object
      properties:
        fsProperties:
          $ref: '#/components/schemas/GcsFilesystemProperties'
        file:
          type: string
          description: P12 KeyFile
          format: binary
    MultipartGcsWithJsonKeyBody:
      required:
      - fsProperties
      type: object
      properties:
        fsProperties:
          $ref: '#/components/schemas/GcsFilesystemProperties'
        file:
          type: string
          description: JSON KeyFile
          format: binary
    AutoDiscoverFSStatus:
      type: object
      properties:
        message:
          type: string
        errorCode:
          type: integer
          format: int32
      example:
        errorCode: 0
        message: message
    FsType:
      type: object
      properties:
        autoconfigurable:
          type: boolean
        fs:
          type: string
        fsDescription:
          type: string
        fsRestrictions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Exclusion'
        multipleSourceAllowed:
          type: boolean
        sourceFilesystemExclusions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Exclusion'
      example:
        fsRestrictions:
        - fsRestriction: true
          description: description
          id: id
          globalExclusion: true
          type: type
          sourceFsExclusion: true
        - fsRestriction: true
          description: description
          id: id
          globalExclusion: true
          type: type
          sourceFsExclusion: true
        autoconfigurable: true
        multipleSourceAllowed: true
        fs: fs
        fsDescription: fsDescription
        sourceFilesystemExclusions:
        - fsRestriction: true
          description: description
          id: id
          globalExclusion: true
          type: type
          sourceFsExclusion: true
        - fsRestriction: true
          description: description
          id: id
          globalExclusion: true
          type: type
          sourceFsExclusion: true
    Migration:
      type: object
      properties:
        migrationId:
          type: string
        internalId:
          type: string
        path:
          type: string
        scanOnlyMigration:
          type: boolean
        recurringMigration:
          type: boolean
        recurringPeriodSeconds:
          type: integer
          format: int32
        deletionMode:
          $ref: '#/components/schemas/DeletionMode'
        delayedDeletionPeriodSeconds:
          type: integer
          format: int32
        autoSourceCleanupEnabled:
          type: boolean
        source:
          type: string
        target:
          type: string
        state:
          $ref: '#/components/schemas/MigrationState'
        resumable:
          type: boolean
        abortReason:
          type: string
          enum:
          - AUTO_ABORTED
          - MANUALLY_ABORTED_BY_USER
        exclusions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Exclusion'
        userDefinedExclusions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Exclusion'
        targetActionPolicy:
          type: string
        pathMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PathMapping'
        unscheduledEvents:
          type: integer
          format: int32
        scheduledEvents:
          type: integer
          format: int32
        failedPathCount:
          type: integer
          format: int64
        autoSourceCleanupQueuedPaths:
          type: integer
          format: int64
        maxStoppedUnscheduledEventBufferSize:
          type: integer
          format: int32
        migrationCreatedTime:
          type: string
          format: date-time
        migrationStartTime:
          type: string
          format: date-time
        migrationCompleteTime:
          type: string
          format: date-time
        migrationEdge:
          type: string
        scannerSummary:
          $ref: '#/components/schemas/ScannerContentSummary'
        clientActivitySummary:
          $ref: '#/components/schemas/ScannerContentMatrix'
        maxPendingRegions:
          type: integer
          format: int32
        pendingRegionCount:
          type: integer
          format: int64
        migrationGates:
          type: array
          items:
            $ref: '#/components/schemas/MigrationGate'
        recurringMigrationTracker:
          $ref: '#/components/schemas/RecurringMigrationTracker'
        sourceCleanupTracker:
          $ref: '#/components/schemas/SourceCleanupTracker'
        additionalProperties:
          type: object
          additionalProperties:
            type: string
        oldestIncompleteWorkItem:
          $ref: '#/components/schemas/OldestIncompleteWorkItem'
        numberPathsRequeued:
          type: integer
          format: int64
        migrationPriority:
          $ref: '#/components/schemas/MigrationPriority'
      example:
        scanOnlyMigration: true
        recurringMigration: false
        recurringPeriodSeconds: 0
        deletionMode: IMMEDIATE_DELETION
        delayedDeletionPeriodSeconds: 0
        autoSourceCleanupEnabled: true
        migrationCreatedTime: 2000-01-23T04:56:07.000+00:00
        resumable: true
        unscheduledEvents: 0
        exclusions:
        - fsRestriction: true
          defaultExclusion: true
          description: description
          id: id
          globalExclusion: true
          sourceFsExclusion: true
          type: DateExclusion
        - fsRestriction: true
          defaultExclusion: true
          description: description
          id: id
          globalExclusion: true
          sourceFsExclusion: true
          type: DateExclusion
        source: source
        pathMappings:
        - targetFileSystem: targetFileSystem
          description: description
          targetPath: targetPath
          id: id
          sourcePath: sourcePath
          sourceFileSystem: sourceFileSystem
        - targetFileSystem: targetFileSystem
          description: description
          targetPath: targetPath
          id: id
          sourcePath: sourcePath
          sourceFileSystem: sourceFileSystem
        internalId: internalId
        path: path
        migrationStartTime: 2000-01-23T04:56:07.000+00:00
        migrationGates:
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          actionStatus: actionStatus
          gateId: gateId
          timeCreated: 2000-01-23T04:56:07.000+00:00
          gatePath: gatePath
          complete: true
          dependantRegions: 7
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          actionStatus: actionStatus
          gateId: gateId
          timeCreated: 2000-01-23T04:56:07.000+00:00
          gatePath: gatePath
          complete: true
          dependantRegions: 7
        userDefinedExclusions:
        - fsRestriction: true
          defaultExclusion: true
          description: description
          id: id
          globalExclusion: true
          sourceFsExclusion: true
          type: DateExclusion
        - fsRestriction: true
          defaultExclusion: true
          description: description
          id: id
          globalExclusion: true
          sourceFsExclusion: true
          type: DateExclusion
        state: NONSCHEDULED
        failedPathCount: 1
        autoSourceCleanupQueuedPaths: 1
        migrationCompleteTime: 2000-01-23T04:56:07.000+00:00
        maxPendingRegions: 5
        abortReason: AUTO_ABORTED
        pendingRegionCount: 2
        targetActionPolicy: targetActionPolicy
        maxStoppedUnscheduledEventBufferSize: 5
        target: target
        clientActivitySummary:
          directoryCount: 3
          byteCount: 7
          fileCount: 9
        migrationId: migrationId
        oldestIncompleteWorkItem:
          migrationId: migrationId
          path: path
          sourceEventCreationDate: 2000-01-23T04:56:07.000+00:00
          itemType: SCHEDULED_EVENT
          ldmActionCreationDate: 2000-01-23T04:56:07.000+00:00
          ldmActionCreationTimeStamp: 3
          newPath: newPath
          operation: CREATE
          sourceEventCreationTimestamp: 9
        migrationEdge: migrationEdge
        scheduledEvents: 6
        numberPathsRequeued: 2
        additionalProperties:
          key: additionalProperties
        scannerSummary:
          progressSummary:
            bytesScanned: 1
            directoriesScanned: 6
            filesExcluded: 5
            bytesExcluded: 2
            dirsExcluded: 5
            baseScanCompletionTime: 2000-01-23T04:56:07.000+00:00
            filesScanned: 0
          contentSummary:
            directoryCount: 3
            byteCount: 7
            fileCount: 9
        migrationPriority: NORMAL
    InsufficientFsPermissionsException:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/HttpStatus'
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
        localizedMessage:
          type: string
    PendingRegion:
      type: object
      properties:
        pendingRegionId:
          type: integer
          format: int64
        path:
          type: string
        actionPolicy:
          type: string
        dateCreated:
          type: string
          format: date-time
      example:
        path: path
        dateCreated: 2000-01-23T04:56:07.000+00:00
        actionPolicy: actionPolicy
        pendingRegionId: 0
    OldestIncompleteWorkItem:
      type: object
      properties:
        migrationId:
          type: string
          description: Migration id
        itemType:
          type: string
          description: Type of item
          enum:
          - SCHEDULED_EVENT
          - UNSCHEDULED_EVENT
          - RESCAN_REGION
          - NONE
        operation:
          $ref: '#/components/schemas/ActionType'
        path:
          type: string
          description: Path of item as provided by the source
        newPath:
          type: string
          description: Destination path (if rename)
        sourceEventCreationTimestamp:
          type: integer
          description: Timestamp of item provided by source filesystem
          format: int64
        sourceEventCreationDate:
          type: string
          description: Human readable date of item provided by source filesystem
          format: date-time
        ldmActionCreationTimeStamp:
          type: integer
          description: Timestamp of action being created in LDM
          format: int64
        ldmActionCreationDate:
          type: string
          description: Human readable date of action being created in LDM
          format: date-time
      description: oldest incomplete work item of a migration
      example:
        migrationId: migrationId
        path: path
        sourceEventCreationDate: 2000-01-23T04:56:07.000+00:00
        itemType: SCHEDULED_EVENT
        ldmActionCreationDate: 2000-01-23T04:56:07.000+00:00
        ldmActionCreationTimeStamp: 3
        newPath: newPath
        operation: CREATE
        sourceEventCreationTimestamp: 9
    MigrationFailures:
      type: object
      properties:
        migrationId:
          type: string
        internalId:
          type: string
        failedPathCount:
          type: integer
          format: int64
        failedPaths:
          type: array
          items:
            $ref: '#/components/schemas/FailedPath'
      example:
        migrationId: migrationId
        internalId: internalId
        failedPaths:
        - timeStamp: 6
          path: path
          renamePath: renamePath
          action: CREATE
          dateFailed: 2000-01-23T04:56:07.000+00:00
          failureMessage: failureMessage
        - timeStamp: 6
          path: path
          renamePath: renamePath
          action: CREATE
          dateFailed: 2000-01-23T04:56:07.000+00:00
          failureMessage: failureMessage
        failedPathCount: 0
    SourceCleanupQueuedPath:
      type: object
      properties:
        path:
          type: string
        timeStamp:
          type: integer
          format: int64
      example:
        timeStamp: 6
        path: path
    MigrationMappingCheckResult:
      properties:
        mappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PathMapping'
        conflictingMigrationIds:
          uniqueItems: true
          type: array
          items:
            type: string
      example:
        mappings: migrationId
        conflictingMigrationIds: source
    MigrationPatch:
      type: object
      properties:
        delayedDeletionPeriod:
          type: integer
          format: int32
        recurringPeriodSeconds:
          type: integer
          format: int32
        migrationPriority:
          $ref: '#/components/schemas/MigrationPriority'
      example:
        recurringPeriodSeconds: 0
        delayedDeletionPeriod: 60
        migrationPriority: HIGH
    AssetDeletionStats:
      type: object
      properties:
        total:
          type: integer
          format: int32
        deleted:
          type: integer
          format: int32
        bytesDeleted:
          type: integer
          format: int64
      example:
        total: 25
        deleted: 21
        bytes: 8008
    FileWriteRequest:
      type: object
      properties:
        fileBody:
          type: string
        createIfNotExists:
          type: boolean
        overwrite:
          type: boolean
      example:
        overwrite: true
        fileBody: fileBody
        createIfNotExists: true
    FileDeleteRequest:
      type: object
      properties:
        recursive:
          type: boolean
      example:
        recursive: true
    MultipartCreateFileBody:
      required:
      - fileBody
      - path
      type: object
      properties:
        path:
          type: string
          description: Path to the file
        fileBody:
          type: string
          description: File content
          format: binary
    FileStatus:
      type: object
      properties:
        path:
          type: string
        isDirectory:
          type: boolean
        length:
          type: integer
          format: int64
        modificationTime:
          type: integer
          format: int64
      example:
        path: path
        modificationTime: 6
        length: 0
        isDirectory: true
    FileSystemURI:
      type: object
      properties:
        fileSystemURI:
          type: string
      example:
        fileSystemURI: fileSystemURI
    License:
      type: object
      properties:
        id:
          type: string
        productLicense:
          type: string
        licenseSource:
          type: string
        licenseStatus:
          type: string
        warning:
          type: string
        lastTimeChecked:
          type: integer
          format: int64
        isValid:
          type: boolean
        components:
          type: array
          items:
            $ref: '#/components/schemas/LicenseComponent'
        licenseExceptionMessage:
          type: string
        invalidReason:
          type: string
        expiredReason:
          type: string
        expiryDate:
          type: string
      example:
        components:
        - licenseType: licenseType
          licenseStatus: licenseStatus
          isValid: true
          warning: warning
          invalidReason: invalidReason
          type: ConsumptionLicense
        - licenseType: licenseType
          licenseStatus: licenseStatus
          isValid: true
          warning: warning
          invalidReason: invalidReason
          type: ConsumptionLicense
        productLicense: productLicense
        lastTimeChecked: 0
        licenseStatus: licenseStatus
        isValid: true
        warning: warning
        id: id
        licenseSource: licenseSource
        licenseExceptionMessage: licenseExceptionMessage
        invalidReason: invalidReason
        expiredReason: expiredReason
    LicenseComponent:
      required:
      - type
      type: object
      properties:
        warning:
          type: string
        licenseType:
          type: string
        invalidReason:
          type: string
        isValid:
          type: boolean
        licenseStatus:
          type: string
        type:
          type: string
      example:
        licenseType: licenseType
        licenseStatus: licenseStatus
        isValid: true
        warning: warning
        invalidReason: invalidReason
        type: ConsumptionLicense
      discriminator:
        propertyName: type
        mapping:
          DataLicenseDTO: '#/components/schemas/DataLicense'
          MeteredLicenseDTO: '#/components/schemas/MeteredLicense'
          TrialLicenseDTO: '#/components/schemas/TrialLicense'
          TimeLicenseDTO: '#/components/schemas/TimeLicense'
          ConsumptionLicenseDTO: '#/components/schemas/ConsumptionLicense'
    DataLicense:
      type: object
      properties:
        migratedDataLimit:
          type: integer
          format: int64
        expiredReason:
          type: string
          deprecated: true
        lastTimeChecked:
          type: integer
          format: int64
          deprecated: true
        migratedDataSize:
          type: integer
          format: int64
        isMigratedDataLimited:
          type: boolean
        percentMigratedDataUsed:
          type: integer
          format: int32
        migratedDataRemaining:
          type: integer
          format: int64
        migratedDataLimited:
          type: boolean
          writeOnly: true
      example:
        migratedDataLimited: true
        migratedDataLimit: 0
        lastTimeChecked: 6
        migratedDataSize: 1
        percentMigratedDataUsed: 5
        expiredReason: expiredReason
        isMigratedDataLimited: true
        migratedDataRemaining: 5
      allOf:
      - $ref: '#/components/schemas/LicenseComponent'
    MeteredLicense:
      type: object
      properties:
        isMetered:
          type: boolean
        meteredLicenseExpiryDate:
          type: integer
          format: int64
        lastMeteringUpdate:
          type: integer
          format: int64
        lastTimeChecked:
          type: integer
          format: int64
        expiredReason:
          type: string
          deprecated: true
        metered:
          type: boolean
          writeOnly: true
      example:
        lastMeteringUpdate: 6
        lastTimeChecked: 1
        expiredReason: expiredReason
        isMetered: true
        metered: true
        meteredLicenseExpiryDate: 0
      allOf:
      - $ref: '#/components/schemas/LicenseComponent'
    TrialLicense:
      type: object
      properties:
        expiredReason:
          type: string
          deprecated: true
        trialPeriod:
          type: integer
          format: int64
        installTime:
          type: integer
          format: int64
        expireTime:
          type: integer
          format: int64
        trial:
          type: boolean
      example:
        expireTime: 1
        trialPeriod: 0
        expiredReason: expiredReason
        installTime: 6
        trial: true
      allOf:
      - $ref: '#/components/schemas/LicenseComponent'
    TimeLicense:
      type: object
      properties:
        expiredReason:
          type: string
          deprecated: true
        lastTimeChecked:
          type: integer
          format: int64
          deprecated: true
        expireTime:
          type: integer
          format: int64
        gracePeriodDays:
          type: integer
          format: int64
        gracePeriodEndTime:
          type: integer
          format: int64
      allOf:
      - $ref: '#/components/schemas/LicenseComponent'
    ConsumptionLicense:
      type: object
      properties:
        lastTimeChecked:
          type: integer
          format: int64
        gracePeriodEndTime:
          type: integer
          format: int64
        expireTime:
          type: integer
          format: int64
        gracePeriodDays:
          type: integer
          format: int64
        consumption:
          type: boolean
      example:
        gracePeriodDays: 5
        expireTime: 1
        lastTimeChecked: 0
        consumption: true
        gracePeriodEndTime: 6
      allOf:
      - $ref: '#/components/schemas/LicenseComponent'
    LicenseFileBody:
      required:
      - file
      type: object
      properties:
        file:
          type: string
          format: binary
    BackupEntry:
      type: object
      properties:
        createdAt:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        migrationsCount:
          type: integer
          format: int32
        backupName:
          type: string
      example:
        createdAt: 0
        migrationsCount: 1
        size: 6
        backupName: backupName
    BackupConfigInfo:
      type: object
      properties:
        backupsLocation:
          type: string
        lastSuccessfulTs:
          type: integer
          format: int64
        backupSchedule:
          $ref: '#/components/schemas/BackupSchedule'
        storedFilePaths:
          type: array
          items:
            type: string
      example:
        lastSuccessfulTs: 0
        backupSchedule:
          periodMinutes: 6
          enabled: true
        backupsLocation: backupsLocation
        storedFilePaths:
        - storedFilePaths
        - storedFilePaths
    BackupSchedule:
      type: object
      properties:
        enabled:
          type: boolean
        periodMinutes:
          type: integer
          format: int32
      example:
        periodMinutes: 6
        enabled: true
    Metering:
      type: object
      properties:
        historyBuckets:
          type: array
          items:
            $ref: '#/components/schemas/MeterBucket'
        totalCurrentTransactionCnt:
          type: integer
          format: int64
        totalCurrentKbCnt:
          type: integer
          format: int64
        staticKbCnt:
          type: integer
          format: int64
        liveKbCnt:
          type: integer
          format: int64
      example:
        totalCurrentKbCnt: 2
        historyBuckets:
        - transactionCnt: 6
          kbCntScan: 1
          kbCnt: 0
          bucketStartTime: bucketStartTime
          kbCntPostScan: 5
          txnPostScan: 2
          totalTransactionCnt: 7
          aggregation: aggregation
          txnScan: 5
          totalKbCnt: 9
        - transactionCnt: 6
          kbCntScan: 1
          kbCnt: 0
          bucketStartTime: bucketStartTime
          kbCntPostScan: 5
          txnPostScan: 2
          totalTransactionCnt: 7
          aggregation: aggregation
          txnScan: 5
          totalKbCnt: 9
        totalCurrentTransactionCnt: 3
        staticKbCnt: 1
        liveKbCnt: 2
    MeterBucket:
      type: object
      properties:
        kbCnt:
          type: integer
          format: int64
        aggregation:
          type: string
        transactionCnt:
          type: integer
          format: int64
        kbCntScan:
          type: integer
          format: int64
        kbCntPostScan:
          type: integer
          format: int64
        txnScan:
          type: integer
          format: int64
        txnPostScan:
          type: integer
          format: int64
        bucketStartTime:
          type: string
        totalTransactionCnt:
          type: integer
          format: int64
        totalKbCnt:
          type: integer
          format: int64
        totalKbCntScan:
          type: integer
          format: int64
        totalKbCntPostScan:
          type: integer
          format: int64
      example:
        transactionCnt: 6
        kbCntScan: 1
        kbCnt: 0
        bucketStartTime: bucketStartTime
        kbCntPostScan: 5
        txnPostScan: 2
        totalTransactionCnt: 7
        aggregation: aggregation
        txnScan: 5
        totalKbCnt: 9
    DiagnosticSummary:
      type: object
      properties:
        transferRateBytes10:
          type: integer
          format: int64
        transferRateBytes60:
          type: integer
          format: int64
        transferRateBytes300:
          type: integer
          format: int64
        transferRateFiles10:
          type: integer
          format: int64
        transferRateFiles60:
          type: integer
          format: int64
        transferRateFiles300:
          type: integer
          format: int64
        incomingTransportBytes10:
          type: integer
          format: int64
        incomingTransportBytes60:
          type: integer
          format: int64
        incomingTransportBytes300:
          type: integer
          format: int64
        outgoingTransportBytes10:
          type: integer
          format: int64
        outgoingTransportBytes60:
          type: integer
          format: int64
        outgoingTransportBytes300:
          type: integer
          format: int64
        incomingTransportRequestAvgSizeBytes:
          type: integer
          format: int64
        outgoingTransportRequestAvgSizeBytes:
          type: integer
          format: int64
        incomingDTADiagnosticsRequestAvgSizeBytes:
          type: integer
          format: int64
        connectionsEstablished:
          type: integer
          format: int32
        fileSizesPercentiles:
          type: array
          items:
            type: integer
            format: int64
        fileTransferRatesPercentiles:
          type: array
          items:
            type: integer
            format: int64
        activeFileSizesPercentiles:
          type: array
          items:
            type: integer
            format: int64
        activeFileTransferRatesPercentiles:
          type: array
          items:
            type: integer
            format: int64
        fileTrackerLatencyPercentiles:
          type: array
          items:
            type: integer
            format: int64
        cpuPressureSome:
          type: array
          items:
            type: number
            format: double
        ioPressureSome:
          type: array
          items:
            type: number
            format: double
        ioPressureFull:
          type: array
          items:
            type: number
            format: double
        memoryPressureSome:
          type: array
          items:
            type: number
            format: double
        memoryPressureFull:
          type: array
          items:
            type: number
            format: double
        activeFileTransferCount:
          type: integer
          format: int64
        totalActiveFileSizeToTransfer:
          type: integer
          format: int64
        totalActiveFileSizeTransferred:
          type: integer
          format: int64
        pullThreads:
          type: integer
          format: int32
        uptime:
          type: integer
          format: int64
        iowaitPercentage:
          type: number
          format: double
        failedPathsAverage:
          type: integer
          format: int64
        connectionsTxOSBufferedBytes:
          type: integer
          format: int32
        connectionsRxOSBufferedBytes:
          type: integer
          format: int32
        connectionsRetransmit:
          type: integer
          format: int32
        processCpuLoad:
          type: number
          format: double
        systemCpuLoad:
          type: number
          format: double
        actionStoreCurrent:
          type: integer
          format: int64
        actionStoreLargestMigration:
          type: integer
          format: int64
        actionStoreLargestMigrationId:
          type: string
        actionStoreMigrationPeak:
          type: integer
          format: int64
        actionStorePeakMigrationId:
          type: string
        migrationsRunning:
          type: integer
          format: int32
        migrationsLive:
          type: integer
          format: int32
        migrationsStopped:
          type: integer
          format: int32
        pendingRegionCurrent:
          type: integer
          format: int64
        pendingRegionAverage:
          type: integer
          format: int64
        pendingRegionMaxMigration:
          type: integer
          format: int64
        pendingRegionMaxMigrationPath:
          type: string
        totalEventAdded:
          type: integer
          format: int64
        totalEventQueued:
          type: integer
          format: int64
        eventsBehindNameNode:
          type: integer
          format: int64
        eventsBehindMax:
          type: integer
          format: int64
        eventsBehindAverage:
          type: integer
          format: int64
        eventRPCMax:
          type: integer
          format: int64
        eventRPCAverage:
          type: integer
          format: int64
        failedPathsCount:
          type: integer
          format: int64
        retryAverage:
          type: integer
          format: int64
        migrationIdMostFailedPaths:
          type: string
        migrationCountMostFailedPaths:
          type: integer
          format: int64
        retryCount:
          type: integer
          format: int64
        migrationIdMostRetries:
          type: string
        migrationCountMostRetries:
          type: integer
          format: int64
        totalFilesIterated:
          type: integer
          format: int64
        totalDirsIterated:
          type: integer
          format: int64
        totalBytesIterated:
          type: integer
          format: int64
        totalFilesExcluded:
          type: integer
          format: int64
        totalDirsExcluded:
          type: integer
          format: int64
        totalBytesExcluded:
          type: integer
          format: int64
        gcCount:
          type: integer
          format: int64
        gcPauseTime:
          type: integer
          format: int64
        busyMigration:
          type: string
        totalFileTrackerCount:
          type: integer
          format: int32
        activeMigrationCount:
          type: integer
          format: int32
        busyMigrationCount:
          type: integer
          format: int32
        avgFailedPaths:
          type: integer
          format: int64
        avgRetries:
          type: integer
          format: int64
        totalMigrationPathsRequeued:
          type: integer
          format: int64
      example:
        fileTrackerLatencyPercentiles: fileTrackerLatencyPercentiles
        totalActiveFileSizeToTransfer: 1
        totalActiveFileSizeTransferred: 1
        iowaitPercentage: 6.683562403749608
        failedPathsAverage: 1
        retryAverage: 1
        migrationIdMostFailedPaths: migrationIdMostFailedPaths
        transferRateBytes300: 1
        fileSizesPercentiles:
        - 9
        - 9
        actionStoreLargestMigration: 6
        transferRateFiles300: 2
        totalDirsIterated: 3
        migrationCountMostRetries: 7
        processCpuLoad: 6.683562403749608
        totalFilesIterated: 3
        transferRateBytes10: 0
        avgFailedPaths: 7
        actionStorePeakMigrationId: actionStorePeakMigrationId
        busyMigrationCount: 4
        failedPathsCount: 0
        busyMigration: busyMigration
        transferRateFiles60: 5
        totalFileTrackerCount: 4
        migrationsRunning: 6
        totalBytesExcluded: 4
        memoryPressureFull:
        - 6.84685269835264
        - 6.84685269835264
        gcPauseTime: 6
        activeMigrationCount: 1
        totalBytesIterated: 7
        pendingRegionAverage: 6
        connectionsTxOSBufferedBytes: 5
        avgRetries: 9
        transferRateBytes60: 6
        memoryPressureSome:
        - 1.4894159098541704
        - 1.4894159098541704
        actionStoreLargestMigrationId: actionStoreLargestMigrationId
        migrationCountMostFailedPaths: 4
        migrationsLive: 1
        connectionsEstablished: 7
        eventsBehindNameNode: 3
        transferRateFiles10: 5
        ioPressureFull:
        - 1.0246457001441578
        - 1.0246457001441578
        activeFileTransferCount: 7
        totalDirsExcluded: 3
        pullThreads: 1
        connectionsRetransmit: 9
        eventRPCAverage: 6
        systemCpuLoad: 8.762042012749001
        cpuPressureSome:
        - 7.386281948385884
        - 7.386281948385884
        totalFilesExcluded: 5
        migrationsStopped: 2
        activeFileTransferRatesPercentiles:
        - 4
        - 4
        pendingRegionMaxMigrationPath: pendingRegionMaxMigrationPath
        actionStoreCurrent: 9
        pendingRegionCurrent: 6
        pendingRegionMaxMigration: 5
        eventsBehindAverage: 0
        eventRPCMax: 7
        ioPressureSome:
        - 1.2315135367772556
        - 1.2315135367772556
        retryCount: 8
        gcCount: 0
        connectionsRxOSBufferedBytes: 9
        fileTransferRatesPercentiles:
        - 3
        - 3
        uptime: 4
        eventsBehindMax: 7
        totalEventQueued: 3
        actionStoreMigrationPeak: 3
        totalEventAdded: 6
        activeFileSizesPercentiles:
        - 2
        - 2
        migrationIdMostRetries: migrationIdMostRetries
        incomingTransportBytes10: 140
        incomingTransportBytes60: 840
        incomingTransportBytes300: 840
        outgoingTransportBytes10: 70000
        outgoingTransportBytes60: 70000
        outgoingTransportBytes300: 70000
        incomingTransportRequestAvgSizeBytes: 150
        outgoingTransportRequestAvgSizeBytes: 1500
        incomingDTADiagnosticsRequestAvgSizeBytes: 98
    RxTxTotals:
      type: object
      properties:
        totalRxQueue:
          type: integer
          format: int64
        totalTxQueue:
          type: integer
          format: int64
        retrnsmt:
          type: integer
          format: int64
      example:
        totalTxQueue: 6
        totalRxQueue: 0
        retrnsmt: 1
    NetworkConnection:
      type: object
      properties:
        sl:
          type: integer
          format: int32
        localAddressIP:
          type: string
        localAddressPort:
          type: integer
          format: int32
        remAddressIP:
          type: string
        remAddressPort:
          type: integer
          format: int32
        st:
          type: integer
          format: int32
        txQueue:
          type: integer
          format: int32
        rxQueue:
          type: integer
          format: int32
        retrnsmt:
          type: integer
          format: int32
        uid:
          type: integer
          format: int32
        inode:
          type: integer
          format: int64
      example:
        inode: 3
        st: 5
        uid: 9
        localAddressPort: 6
        remAddressPort: 1
        rxQueue: 2
        sl: 0
        localAddressIP: localAddressIP
        txQueue: 5
        retrnsmt: 7
        remAddressIP: remAddressIP
    LiveMigratorDiagnosticsSnapshot:
      type: object
      properties:
        dataAgentDiagnosticsSnapshots:
          type: array
          items:
            $ref: '#/components/schemas/DataAgentDiagnosticsSnapshot'
      example:
        dataAgentDiagnosticsSnapshots:
        - agentName: agentName
        - agentName: agentName
      allOf:
      - $ref: '#/components/schemas/DiagnosticsSnapshot'
    DiagnosticsSnapshot:
      required:
      - implClassName
      type: object
      properties:
        timeStamp:
          type: integer
          format: int64
        collectionTime:
          type: integer
          format: int64
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/Diagnostic'
        implClassName:
          type: string
      example:
        timeStamp: 1234
        diagnostics:
        - timeStamp: 4234
          type: type
        - timeStamp: 2342
          type: type
        collectionTime: 6
        implClassName: some impl class name
      discriminator:
        propertyName: implClassName
        mapping:
          LiveMigratorDiagnosticsSnapshotDTO: '#/components/schemas/LiveMigratorDiagnosticsSnapshot'
          DataAgentDiagnosticsSnapshotDTO: '#/components/schemas/DataAgentDiagnosticsSnapshot'
    DataAgentDiagnosticsSnapshot:
      type: object
      properties:
        agentName:
          type: string
      example:
        agentName: agentName
      allOf:
      - $ref: '#/components/schemas/DiagnosticsSnapshot'
    DiagnosticDescription:
      type: object
      properties:
        diagnosticDescription:
          type: object
          additionalProperties:
            type: string
        kind:
          type: string
      example:
        kind: kind
        diagnosticDescription:
          key: diagnosticDescription
    Configuration:
      properties:
        key:
          type: string
        value:
          type: string
      example:
        key: key
        value: value
    RequeuingAction:
      type: object
      properties:
        migrationId:
          type: string
        path:
          type: array
          items:
            type: string
        firstRequeueTimestamp:
          type: integer
          format: int64
        lastRequeueTimestamp:
          type: integer
          format: int64
        actionId:
          type: integer
          format: int64
        action:
          $ref: '#/components/schemas/ActionType'
        numberOfRequeues:
          type: integer
          format: int64
        nSecondsRequeuing:
          type: integer
          format: int64
        failureMessage:
          type: string
      example:
        migrationId: abc-123
        path: path
        firstRequeueTimestamp: 6
        lastRequeueTimestamp: 6
        actionId: 156
        action: CREATE
        numberOfRequeues: 10
        nSecondsRequeuing: 200
    RequeuingActionsStats:
      type: object
      properties:
        requeueCount:
          type: integer
          format: int64
        requeueCountByMigration:
          type: object
          additionalProperties:
            type: integer
            format: int64
      example:
        requeueCount: 10000
    Verification:
      type: object
      properties:
        id:
          type: string
        migrationId:
          type: string
        migrationInternalId:
          type: string
        status:
          $ref: '#/components/schemas/VerificationStatus'
        createdTimestamp:
          type: integer
          format: int64
        startedTimestamp:
          type: integer
          format: int64
        finishedTimestamp:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        startedAt:
          type: string
          format: date-time
        finishedAt:
          type: string
          format: date-time
        paths:
          type: array
          items:
            type: string
        ignoreAfterTimestamp:
          type: integer
          format: int64
        originalPaths:
          type: array
          items:
            type: string
        verificationDepth:
          type: integer
          format: int32
        filesOnSource:
          type: integer
          format: int64
        directoriesOnSource:
          type: integer
          format: int64
        bytesOnSource:
          type: integer
          format: int64
        filesExcluded:
          type: integer
          format: int64
        filesExcludedExistsOnTarget:
          type: integer
          format: int64
        filesExcludedNotExistsOnTarget:
          type: integer
          format: int64
        dataExcluded:
          type: integer
          format: int64
          deprecated: true
        bytesExcluded:
          type: integer
          format: int64
        bytesExcludedExistsOnTarget:
          type: integer
          format: int64
        bytesExcludedNotExistsOnTarget:
          type: integer
          format: int64
        directoriesExcluded:
          type: integer
          format: int64
        directoriesExcludedExistsOnTarget:
          type: integer
          format: int64
        directoriesExcludedNotExistsOnTarget:
          type: integer
          format: int64
        filesOnTarget:
          type: integer
          format: int64
        directoriesOnTarget:
          type: integer
          format: int64
        bytesOnTarget:
          type: integer
          format: int64
        filesMissingOnTarget:
          type: integer
          format: int64
        directoriesMissingOnTarget:
          type: integer
          format: int64
        filesMissingOnSource:
          type: integer
          format: int64
        directoriesMissingOnSource:
          type: integer
          format: int64
        fileSizeMismatches:
          type: integer
          format: int64
        totalDiscrepancies:
          type: integer
          format: int64
      example:
        id: 9e64f16d-e1c1-4aa2-a9a6-0f9d3acc62ad-1658832881
        migrationId: mig5
        migrationInternalId: 9e64f16d-e1c1-4aa2-a9a6-0f9d3acc62ad
        status: IN_PROGRESS
        createdTimestamp: 1000
        startedTimestamp: 1001
        finishedTimestamp: 1002
        createdAt: 2000-01-23T04:56:07.000+00:00
        startedAt: 2000-01-23T04:56:07.000+00:00
        finishedAt: 2000-01-23T04:56:07.000+00:00
        paths:
        - /path1
        - /path2
        ignoreAfterTimestamp: 0
        originalPaths:
        - /path*
        verificationDepth: 0
        filesOnSource: 10
        directoriesOnSource: 2
        bytesOnSource: 10
        filesExcluded: 4
        filesExcludedExistsOnTarget: 123
        filesExcludedNotExistsOnTarget: 7771
        directoriesExcluded: 2
        directoriesExcludedExistsOnTarget: 11
        directoriesExcludedNotExistsOnTarget: 61
        bytesExcluded: 12526
        bytesExcludedExistsOnTarget: 12526
        bytesExcludedNotExistsOnTarget: 8781
        filesOnTarget: 9
        directoriesOnTarget: 1
        bytesOnTarget: 10
        filesMissingOnTarget: 1
        directoriesMissingOnTarget: 1
        filesMissingOnSource: 1
        directoriesMissingOnSource: 2
        fileSizeMismatches: 2
        totalDiscrepancies: 4
    VerificationConfiguration:
      type: object
      properties:
        migrationId:
          type: string
        ignoreAfterTimestamp:
          type: integer
          format: int64
        originalPaths:
          type: array
          items:
            type: string
        verificationDepth:
          type: integer
          format: int32
      example:
        migrationId: migrationId
        ignoreAfterTimestamp: 0
        originalPaths:
        - /path*
        verificationDepth: 0
    VerificationReportFileMetadata:
      type: object
      properties:
        descriptor:
          $ref: '#/components/schemas/VerificationReportFileDescriptor'
        size:
          type: integer
          format: int64
        created:
          type: integer
          format: int64
        checksum:
          type: integer
          format: int64
      example:
        descriptor:
          name: summary.json
          type: SUMMARY
          mimeType: application/json
        size: 1099
        checksum: 123456789
        created: 1663852432000
    StreamedFile:
      type: string
      description: Streamed file
      format: binary
    DataAgent:
      type: object
      properties:
        name:
          type: string
        host:
          type: string
        port:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/DataAgentType'
        version:
          type: string
        healthy:
          type: boolean
        health:
          $ref: '#/components/schemas/DataAgentHealth'
        security:
          $ref: '#/components/schemas/DataAgentSecurity'
      example:
        name: myFirstAgent
        host: 127.0.0.10
        port: 1433
        type: GRPC
        healthy: healthy
        health: health
    DataAgentType:
      type: string
      enum:
      - LOCAL
      - GRPC
    DataAgentHealth:
      type: object
      properties:
        lastStatusUpdateTime:
          type: integer
          format: int64
        lastHealthMessage:
          type: string
        status:
          $ref: '#/components/schemas/DataAgentStatus'
      example:
        lastStatusUpdateTime: 12345
        lastHealthMessage: some health message
        status: CONNECTED
    DataAgentStatus:
      type: string
      enum:
      - CONNECTED
      - DISCONNECTED
      - NOT_VALID
      - CREDENTIALS_ERROR
    DataAgentSecurity:
      type: object
      properties:
        caCert:
          type: string
        clientCert:
          type: string
        clientCertKey:
          type: string
        clientSecret:
          type: string
    DataAgentAddRequest:
      required:
      - agentToken
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: Name of the Data Agent. Must be unique.
        agentToken:
          type: string
        host:
          type: string
      example:
        name: myFirstAgent
        agentToken: '---- BEGIN AGENT TOKEN -----H4sIAAAAAAAAAGVUWa+zNhT8K9KAS32nn2oQDA7iBe2sCRAEgMO...vj/SJ+FVg9t9JRR4o6q+/Aej0b9C9BAAA-----
          END AGENT TOKEN -----'
        host: 127.0.01
    SourceCleanupReportFileMetadata:
      properties:
        descriptor:
          $ref: '#/components/schemas/SourceCleanupReportFileDescriptor'
        size:
          type: integer
          format: int64
        migrationId:
          type: string
        migrationExists:
          type: boolean
        checksum:
          type: integer
          format: int64
        migrationName:
          type: string
      example:
        descriptor:
          name: 14.12.2022-17:00:00.jsonl
          type: FULL
          mimeType: application/json
        size: 8099
        migrationId: migrationId
        migrationName: migrationName
        migrationExists: true
        checksum: 123456789
    HttpStatus:
      type: string
      enum:
      - 100 CONTINUE
      - 101 SWITCHING_PROTOCOLS
      - 102 PROCESSING
      - 103 CHECKPOINT
      - 200 OK
      - 201 CREATED
      - 202 ACCEPTED
      - 203 NON_AUTHORITATIVE_INFORMATION
      - 204 NO_CONTENT
      - 205 RESET_CONTENT
      - 206 PARTIAL_CONTENT
      - 207 MULTI_STATUS
      - 208 ALREADY_REPORTED
      - 226 IM_USED
      - 300 MULTIPLE_CHOICES
      - 301 MOVED_PERMANENTLY
      - 302 FOUND
      - 302 MOVED_TEMPORARILY
      - 303 SEE_OTHER
      - 304 NOT_MODIFIED
      - 305 USE_PROXY
      - 307 TEMPORARY_REDIRECT
      - 308 PERMANENT_REDIRECT
      - 400 BAD_REQUEST
      - 401 UNAUTHORIZED
      - 402 PAYMENT_REQUIRED
      - 403 FORBIDDEN
      - 404 NOT_FOUND
      - 405 METHOD_NOT_ALLOWED
      - 406 NOT_ACCEPTABLE
      - 407 PROXY_AUTHENTICATION_REQUIRED
      - 408 REQUEST_TIMEOUT
      - 409 CONFLICT
      - 410 GONE
      - 411 LENGTH_REQUIRED
      - 412 PRECONDITION_FAILED
      - 413 PAYLOAD_TOO_LARGE
      - 413 REQUEST_ENTITY_TOO_LARGE
      - 414 URI_TOO_LONG
      - 414 REQUEST_URI_TOO_LONG
      - 415 UNSUPPORTED_MEDIA_TYPE
      - 416 REQUESTED_RANGE_NOT_SATISFIABLE
      - 417 EXPECTATION_FAILED
      - 418 I_AM_A_TEAPOT
      - 419 INSUFFICIENT_SPACE_ON_RESOURCE
      - 420 METHOD_FAILURE
      - 421 DESTINATION_LOCKED
      - 422 UNPROCESSABLE_ENTITY
      - 423 LOCKED
      - 424 FAILED_DEPENDENCY
      - 425 TOO_EARLY
      - 426 UPGRADE_REQUIRED
      - 428 PRECONDITION_REQUIRED
      - 429 TOO_MANY_REQUESTS
      - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
      - 451 UNAVAILABLE_FOR_LEGAL_REASONS
      - 500 INTERNAL_SERVER_ERROR
      - 501 NOT_IMPLEMENTED
      - 502 BAD_GATEWAY
      - 503 SERVICE_UNAVAILABLE
      - 504 GATEWAY_TIMEOUT
      - 505 HTTP_VERSION_NOT_SUPPORTED
      - 506 VARIANT_ALSO_NEGOTIATES
      - 507 INSUFFICIENT_STORAGE
      - 508 LOOP_DETECTED
      - 509 BANDWIDTH_LIMIT_EXCEEDED
      - 510 NOT_EXTENDED
      - 511 NETWORK_AUTHENTICATION_REQUIRED
    ErrorCode:
      type: string
      enum:
      - FILE_SYSTEM_ALREADY_EXISTS
      - FILE_SYSTEM_NOT_FOUND
      - UNSUPPORTED_VALUE
      - INVALID_FILESYSTEM_PATH
      - FILE_SYSTEM_ROOT_PATH_NOT_FOUND
      - FILE_IO_ERROR
      - FILE_SYSTEM_ACCESS_RESTRICTED
      - FILE_NOT_FOUND
      - INVALID_FILESYSTEM_CREDENTIALS
      - UNSUPPORTED_FS_EVENT
      - FILE_SYSTEM_INSUFFICIENT_PERMISSIONS
      - INCOMPATIBLE_FILE_SYSTEM
      - FILESYSTEM_AUTHORIZATION_MISMATCH
      - KERBEROS_AUTH_PROBLEM
      - KERBEROS_INVALID_AUTH_TYPE
      - KERBEROS_SPECIFY_PRINCIPAL
      - KERBEROS_KEYTAB_FILE_UNREADABLE
      - KERBEROS_CREDENTIALS_ALREADY_SET_AND_IN_USE
      - AUTO_DISCOVERY_IS_DISABLED
      - AUTO_DISCOVERY_KERBEROS_ERROR
      - AUTO_DISCOVERY_UNKNOWN_ERROR
      - SOURCE_FILE_SYSTEM_ALREADY_EXISTS
      - EVENT_LISTENER_START
      - NO_SOURCE_CONFIGURATION
      - DEFAULT_SOURCE_CANNOT_BE_DETERMINED
      - SUCCESS_FILE_GLOB_CREATION_EXCEPTION
      - ACTIVE_MIGRATIONS
      - ACTIVE_PATH_MAPPINGS
      - MIGRATION_ALREADY_DEFINED
      - MIGRATION_START_PATH_NOT_FOUND
      - MIGRATION_NOT_RUNNABLE
      - MULTIPLE_MIGRATIONS_FOUND
      - FAILED_TO_DELETE_FROM_CURRENT_STATE
      - MIGRATION_NOT_STOPPABLE
      - FAILED_TO_MIGRATE_PATH
      - DUPLICATE_MIGRATION_PATH
      - MIGRATION_QUEUE_NOT_FOUND
      - MIGRATION_NOT_FOUND
      - INVALID_ACTION_POLICY
      - MIGRATION_NOT_RESUMABLE
      - MIGRATION_NOT_RESETTABLE
      - MORE_PENDING_REGIONS_THAN_NEW_MAX
      - SCAN_ONLY_MIGRATION_PERMITTED
      - SCAN_ONLY_OPERATIONS_PERMITTED
      - MIGRATION_GATE_NOT_FOUND
      - MIGRATION_GATE_DUPLICATE_ID
      - MIGRATION_GATE_NOT_APPLICABLE
      - MIGRATION_GATE_CANNOT_BE_DELETED
      - UNAVAILABLE_ACTION_STORE
      - MIGRATION_ACTION_NOT_FOUND
      - VERIFICATION_JOB_NOT_FOUND
      - VERIFICATION_ALREADY_RUNNING
      - EXCLUSION_CREATION_EXCEPTION
      - EXCLUSION_NOT_FOUND
      - EXCLUSION_ALREADY_EXISTS
      - EXCLUSION_DELETION_EXCEPTION
      - CONVERSION_FAILED
      - LICENSE_NOT_FOUND
      - LICENSE_EXCEPTION
      - INVALID_LICENSE
      - NON_VALID_LICENSE
      - DECRYPT_LICENSE
      - LICENSE_RETRIEVAL_EXCEPTION
      - UPLOAD_DIR_NOT_CREATED
      - LICENSE_ACCESS_DENIED
      - TRACKER_NOT_FOUND
      - BANDWIDTH_POLICY_CREATION_EXCEPTION
      - BANDWIDTH_POLICY_NOT_FOUND
      - PENDING_REGION_ALREADY_EXISTS
      - PENDING_REGION_PATH_NOT_FOUND
      - PENDING_REGION_OUTSIDE_MIGRATION
      - HTTP_METHOD_NOT_SUPPORTED
      - HTTP_MEDIA_TYPE_NOT_SUPPORTED
      - HTTP_MEDIA_TYPE_NOT_ACCEPTABLE
      - MISSING_PATH_VARIABLE
      - MISSING_SERVLET_REQUEST_PARAMETER
      - TYPE_MISMATCH_EXCEPTION
      - CONVERSION_NOT_SUPPORTED
      - HTTP_MESSAGE_NOT_READABLE
      - HTTP_MESSAGE_NOT_WRITABLE
      - SERVLET_REQUEST_BINDING
      - METHOD_ARGUMENT_NOT_VALID
      - MISSING_SERVLET_REQUEST_PART
      - BIND_EXCEPTION
      - ASYNC_REQUEST_TIMEOUT
      - NOTIFICATION_NOT_FOUND
      - NOT_EMAIL_NOTIFICATION_TYPE
      - PATH_MAPPING_NOT_FOUND
      - PATH_MAPPING_ALREADY_DEFINED
      - PATH_MAPPING_OVERLAP_CONFLICT
      - PATH_MAPPING_CONFIGURATION
      - PATH_MAPPING_MIGRATION_CONFLICT
      - PREVIEW_FEATURE_ENDPOINT_NOT_FOUND
      - ILLEGAL_ARGUMENTS
      - INVALID_REQUEST_PARAMETERS
      - MISSING_PROPERTY
      - RESOURCE_FILE_NOT_FOUND
      - UPDATE_REQUIRED
      - KAFKA_NOT_AVAILABLE
      - SQS_NOT_AVAILABLE
      - SQS_QUEUE_DOES_NOT_EXIST
      - HDFS_NAMENODE_NOT_AVAILABLE
      - UNKNOWN_PROPERTY
      - EVENTS_RESOURCE
      - INVALID_PATH_FORMAT
      - VERIFICATION_NOT_FOUND
      - VERIFICATION_ALREADY_DEFINED
      - ILLEGAL_STATE
      - VERIFICATION_PATHS_NOT_FOUND
      - TOO_MANY_VERIFICATION_PATHS
      - VERIFICATION_PATHS_OVERLAP
      - VERIFICATION_PATH_NOT_IN_MIGRATION
      - VERIFICATION_PATHS_NOT_SET
      - VERIFICATION_MIGRATION_STATE_EXCEPTION
      - MIGRATION_DELETION_MODE_CONFLICT
      - BACKUP_DESERIALIZATION_EXCEPTION
      - BACKUP_WRITE_IO_EXCEPTION
      - BACKUP_READ_IO_EXCEPTION
      - BACKUP_ACCESS_DENIED_EXCEPTION
      - BACKUP_SERIALIZATION_EXCEPTION
      - BACKUP_SCHEDULE_CONFIG_INVALID_EXCEPTION
      - PENDING_REGIONS_NOT_PERMITTED
      - RECURRING_MIGRATION_NOT_PERMITTED
      - VERIFICATION_REPORT_NOT_FOUND_EXCEPTION
      - VERIFICATION_REPORT_STATE_EXCEPTION
      - VERIFICATION_ALREADY_IN_PROGRESS
      - DATA_AGENT_WRONG_CREDENTIALS
      - DATA_AGENT_COULD_NOT_CONNECT
      - DATA_AGENT_INCOMPATIBLE
      - DATA_AGENT_NOT_FOUND
      - DATA_AGENT_ALREADY_EXISTS
      - VERIFICATION_DEPTH_NEGATIVE_OR_NULL
      - VERIFICATION_CANT_BE_DELETED
      - SOURCE_DELETION_NOT_PERMITTED
      - MIGRATION_CONFIGURATION_EXCEPTION
      - SOURCE_CLEANUP_REPORT_NOT_FOUND_EXCEPTION
    SmtpAuth:
      required:
      - authEnabled
      type: object
      properties:
        authEnabled:
          type: boolean
          description: Authentication is enabled
        login:
          type: string
          description: Login
        password:
          type: string
          description: Password
      description: Authentication credentials for connection to SMTP server
      example:
        password: password
        authEnabled: true
        login: login
    GateActionStatus:
      type: string
      enum:
      - CREATED
      - INJECTED
      - AWAITING_DEPENDENT_REGIONS
      - SCHEDULED
      - COMPLETED
    RegexPatternType:
      type: string
      enum:
      - JAVA_PCRE
      - AUTOMATA
      - GLOB
    MigrationInfoList:
      type: object
      properties:
        migrations:
          type: array
          items:
            $ref: '#/components/schemas/MigrationInfo'
        count:
          type: integer
          format: int32
      example:
        migrations:
        - internalId: internalId
          path: path
          pathRetryCount: 6
          progress:
            dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
            migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
            migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
            dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
            migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
            migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
            migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
            duration:
              inSeconds: 9
              asText: asText
            dataMigratedDueToScan: 3
            migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
            totalBytes: 1
            overallProgressSentReadableValue: overallProgressSentReadableValue
            migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
            migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
            etaEstimate:
              inSeconds: 9
              asText: asText
            overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
            migratedPercentage: 2
            totalScannedBytes: 4
            migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
            migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
            totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
            excludedBytes: 5
            overallProgressSentValue: 2
            migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
            totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
            migratedBytes: 5
            totalMigratedBytes: 7
            migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
            migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
            migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
          id: id
        - internalId: internalId
          path: path
          pathRetryCount: 6
          progress:
            dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
            migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
            migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
            dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
            migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
            migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
            migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
            duration:
              inSeconds: 9
              asText: asText
            dataMigratedDueToScan: 3
            migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
            totalBytes: 1
            overallProgressSentReadableValue: overallProgressSentReadableValue
            migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
            migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
            etaEstimate:
              inSeconds: 9
              asText: asText
            overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
            migratedPercentage: 2
            totalScannedBytes: 4
            migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
            migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
            totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
            excludedBytes: 5
            overallProgressSentValue: 2
            migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
            totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
            migratedBytes: 5
            totalMigratedBytes: 7
            migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
            migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
            migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
          id: id
        count: 7
    MigrationProgress:
      type: object
      properties:
        totalBytes:
          type: integer
          format: int64
        excludedBytes:
          type: integer
          format: int64
        migratedBytes:
          type: integer
          format: int64
        migrationClientBytesBinaryUnitValue:
          type: string
        migrationExcludedReadableBinaryValue:
          type: string
        migratedPercentage:
          type: integer
          format: int32
        migrationClientBytesBinaryUnits:
          type: string
        migrationTotalTransferredReadableBinaryUnits:
          type: string
        migrationTotalTransferredReadableBinaryUnitValue:
          type: string
        migrationTotalReadableBinaryUnits:
          type: string
        migrationTotalBinaryUnitValue:
          type: string
        migrationMigratedReadableBinaryUnits:
          type: string
        migrationTotalTransferredProgressBinaryValue:
          type: string
        migrationTransferredProgressBinaryValue:
          type: string
        migrationExcludedBinaryUnitValue:
          type: string
        totalMigratedBytes:
          type: integer
          format: int64
        totalMigratedBytesBinaryUnitValue:
          type: string
        etaEstimate:
          $ref: '#/components/schemas/MigrationDuration'
        dataMigratedDueToScan:
          type: integer
          format: int64
        dataMigratedDueToScanBinaryUnit:
          type: string
        dataMigratedDueToScanReadableValue:
          type: string
        overallProgressSentValue:
          type: integer
          format: int64
        overallProgressSentBinaryUnit:
          type: string
        overallProgressSentReadableValue:
          type: string
        migrationTotalScannedReadableBinaryUnits:
          type: string
        migrationTotalScannedProgressBinaryValue:
          type: string
        migrationTotalScannedReadableBinaryUnitValue:
          type: string
        totalScannedBytes:
          type: integer
          format: int64
        totalScannedBytesBinaryUnitValue:
          type: string
        duration:
          $ref: '#/components/schemas/MigrationDuration'
      example:
        dataMigratedDueToScanBinaryUnit: dataMigratedDueToScanBinaryUnit
        migrationTotalScannedProgressBinaryValue: migrationTotalScannedProgressBinaryValue
        migrationTotalTransferredReadableBinaryUnitValue: migrationTotalTransferredReadableBinaryUnitValue
        dataMigratedDueToScanReadableValue: dataMigratedDueToScanReadableValue
        migrationTotalScannedReadableBinaryUnitValue: migrationTotalScannedReadableBinaryUnitValue
        migrationTransferredProgressBinaryValue: migrationTransferredProgressBinaryValue
        migrationTotalScannedReadableBinaryUnits: migrationTotalScannedReadableBinaryUnits
        duration:
          inSeconds: 9
          asText: asText
        dataMigratedDueToScan: 3
        migrationClientBytesBinaryUnitValue: migrationClientBytesBinaryUnitValue
        totalBytes: 1
        overallProgressSentReadableValue: overallProgressSentReadableValue
        migrationExcludedReadableBinaryValue: migrationExcludedReadableBinaryValue
        migrationTotalTransferredReadableBinaryUnits: migrationTotalTransferredReadableBinaryUnits
        etaEstimate:
          inSeconds: 9
          asText: asText
        overallProgressSentBinaryUnit: overallProgressSentBinaryUnit
        migratedPercentage: 2
        totalScannedBytes: 4
        migrationTotalTransferredProgressBinaryValue: migrationTotalTransferredProgressBinaryValue
        migrationClientBytesBinaryUnits: migrationClientBytesBinaryUnits
        totalMigratedBytesBinaryUnitValue: totalMigratedBytesBinaryUnitValue
        excludedBytes: 5
        overallProgressSentValue: 2
        migrationMigratedReadableBinaryUnits: migrationMigratedReadableBinaryUnits
        totalScannedBytesBinaryUnitValue: totalScannedBytesBinaryUnitValue
        migratedBytes: 5
        totalMigratedBytes: 7
        migrationExcludedBinaryUnitValue: migrationExcludedBinaryUnitValue
        migrationTotalReadableBinaryUnits: migrationTotalReadableBinaryUnits
        migrationTotalBinaryUnitValue: migrationTotalBinaryUnitValue
    MigrationDuration:
      type: object
      properties:
        asText:
          type: string
        inSeconds:
          type: integer
          format: int64
      example:
        inSeconds: 9
        asText: asText
    DeletionMode:
      type: string
      enum:
      - NO_DELETION
      - IMMEDIATE_DELETION
      - DELAYED_DELETION
    MigrationState:
      type: string
      enum:
      - NONSCHEDULED
      - SCHEDULED
      - RUNNING
      - LIVE
      - PAUSED
      - STOPPED
      - COMPLETED
      - RECURRENCE_SCHEDULED
      - WAITING_FOR_NEXT_RECURRENCE
      - STOPPING
    ScannerContentSummary:
      type: object
      properties:
        progressSummary:
          $ref: '#/components/schemas/ScannerProgressMatrix'
        contentSummary:
          $ref: '#/components/schemas/ScannerContentMatrix'
      example:
        progressSummary:
          bytesScanned: 1
          directoriesScanned: 6
          filesExcluded: 5
          bytesExcluded: 2
          dirsExcluded: 5
          baseScanCompletionTime: 2000-01-23T04:56:07.000+00:00
          filesScanned: 0
        contentSummary:
          directoryCount: 3
          byteCount: 7
          fileCount: 9
    ScannerContentMatrix:
      type: object
      properties:
        byteCount:
          type: integer
          format: int64
        fileCount:
          type: integer
          format: int64
        directoryCount:
          type: integer
          format: int64
      example:
        directoryCount: 3
        byteCount: 7
        fileCount: 9
    RecurringMigrationTracker:
      type: object
      properties:
        iterations:
          type: array
          items:
            $ref: '#/components/schemas/RecurringMigrationIteration'
        recurringCount:
          type: integer
          format: int32
        scansInLastTwentyFourHours:
          type: integer
          format: int32
        scansInLastSevenDays:
          type: integer
          format: int32
        avgDurationInSeconds:
          type: integer
          format: int32
      example:
        recurringCount: 0
        scansInLastTwentyFourHours: 0
        scansInLastSevenDays: 0
        iterations:
          "-startTime": 2000-01-23T04:56:07.000+00:00
          "-completeTime": 2000-01-23T04:56:07.000+00:00
          "-duration": 10
          "-iteration": 0
    SourceCleanupTracker:
      type: object
      properties:
        count:
          type: integer
          format: int32
        inProgress:
          type: boolean
        lastStartTime:
          type: string
          format: date-time
      example:
        count: 1
        inProgress: true
        lastStartTime: 2000-01-23T04:56:07.000+00:00
    MigrationPriority:
      type: string
      enum:
      - HIGH
      - NORMAL
      - LOW
    ActionType:
      type: string
      enum:
      - CREATE
      - MIGRATION
      - MARKER
      - NIL
      - UNLINK
      - RESCAN
      - RENAME
      - METADATA
      - DELAY
      - RESCAN_UNLINK
      - GATE
      - LOCK
      - VERIFY
      - MKDIRS
      - NOT_PRESENT
      - IMMEDIATE_SOURCE_CLEANUP
      - DELAYED_SOURCE_CLEANUP
    FailedPath:
      type: object
      properties:
        path:
          type: string
        renamePath:
          type: string
        failureMessage:
          type: string
        timeStamp:
          type: integer
          format: int64
        action:
          $ref: '#/components/schemas/ActionType'
        dateFailed:
          type: string
          format: date-time
      example:
        timeStamp: 6
        path: path
        renamePath: renamePath
        action: CREATE
        dateFailed: 2000-01-23T04:56:07.000+00:00
        failureMessage: failureMessage
    Diagnostic:
      required:
      - type
      type: object
      properties:
        timeStamp:
          type: integer
          format: int64
        type:
          type: string
      example:
        timeStamp: 1
        type: type
      discriminator:
        propertyName: type
        mapping:
          ActionStoreDiagnosticDTO: '#/components/schemas/ActionStoreDiagnostic'
          CpuLoadDiagnosticDTO: '#/components/schemas/CpuLoadDiagnostic'
          EventManagerDiagnosticDTO: '#/components/schemas/EventManagerDiagnostic'
          FileTrackerDiagnosticDTO: '#/components/schemas/FileTrackerDiagnostic'
          InotifyDiagnosticDTO: '#/components/schemas/InotifyDiagnostic'
          JvmGcDiagnosticDTO: '#/components/schemas/JvmGcDiagnostic'
          LinuxPressureDiagnosticDTO: '#/components/schemas/LinuxPressureDiagnostic'
          MigrationDiagnosticDTO: '#/components/schemas/MigrationDiagnostic'
          NetworkStatusDTO: '#/components/schemas/NetworkStatus'
          ThreadDumpDiagnosticDTO: '#/components/schemas/ThreadDumpDiagnostic'
          ThroughputDiagnosticDTO: '#/components/schemas/ThroughputDiagnostic'
          DataAgentDiagnosticSummaryDTO: '#/components/schemas/DataAgentDiagnosticSummary'
    ActionStoreDiagnostic:
      type: object
      properties:
        totalUnExecutedEvents:
          type: integer
          format: int64
        maxUnexecutedEvents:
          type: integer
          format: int64
        migrationId:
          type: string
        id:
          type: string
      allOf:
      - $ref: '#/components/schemas/Diagnostic'
    CpuLoadDiagnostic:
      type: object
      properties:
        processCpuLoad:
          type: number
          format: double
        processCpuTime:
          type: integer
          format: int64
        systemCpuLoad:
          type: number
          format: double
      allOf:
      - $ref: '#/components/schemas/Diagnostic'
    EventManagerDiagnostic:
      type: object
      properties:
        totalAddEventsCallCount:
          type: integer
          format: int64
        totalEventAdded:
          type: integer
          format: int64
        totalDbAddEventsCallCount:
          type: integer
          format: int64
        maxDbTime:
          type: integer
          format: int64
        totalDbTime:
          type: integer
          format: int64
        meanDbTime:
          type: integer
          format: int64
        totalQueuedEvents:
          type: integer
          format: int64
        totalQueuedEventsPerMigration:
          type: object
          additionalProperties:
            type: integer
            format: int32
      allOf:
      - $ref: '#/components/schemas/Diagnostic'
    FileTrackerDiagnostic:
      type: object
      properties:
        fileTrackers:
          type: array
          items:
            $ref: '#/components/schemas/FileTracker'
        fileSizePercentiles:
          $ref: '#/components/schemas/FileTrackerPercentiles'
        fileTransferRatePercentiles:
          $ref: '#/components/schemas/FileTrackerPercentiles'
        recentActivityByMigration:
          type: object
          additionalProperties:
            type: integer
            format: int32
        numberOfActiveFileTransfers:
          type: integer
          format: int32
        latencyPercentiles:
          type: array
          items:
            $ref: '#/components/schemas/FileTrackerPercentile'
      allOf:
      - $ref: '#/components/schemas/Diagnostic'
    InotifyDiagnostic:
      type: object
      properties:
        avgEventsBehind:
          type: integer
          format: int64
        maxEventsBehind:
          type: integer
          format: int64
        totalEventsRead:
          type: integer
          format: int64
        avgEventsReadPerCall:
          type: integer
          format: int64
        maxEventsReadPerCall:
          type: integer
          format: int64
        avgRpcCallTime:
          type: integer
          format: int64
        maxRpcCallTime:
          type: integer
          format: int64
        eventsBehind:
          type: integer
          format: int64
        nameNodeRetained:
          type: integer
          format: int64
        nameNodeMaxEventsPerRpc:
          type: integer
          format: int64
        nameNodeCheckpointTxs:
          type: integer
          format: int64
      allOf:
      - $ref: '#/components/schemas/Diagnostic'
    JvmGcDiagnostic:
      type: object
      properties:
        gcCount:
          type: integer
          format: int64
        gcPauseTime:
          type: integer
          format: int64
      allOf:
      - $ref: '#/components/schemas/Diagnostic'
    LinuxPressureDiagnostic:
      type: object
      properties:
        pressure:
          type: array
          items:
            $ref: '#/components/schemas/Pressure'
        iowaitPercentage:
          type: number
          format: double
      allOf:
      - $ref: '#/components/schemas/Diagnostic'
    MigrationDiagnostic:
      type: object
      properties:
        pendingRegions:
          type: object
          additionalProperties:
            type: integer
            format: int32
        pendingRegionsMax:
          type: object
          additionalProperties:
            type: integer
            format: int32
        migrationStateCounts:
          type: object
          additionalProperties:
            type: integer
            format: int32
        failedPaths:
          type: object
          additionalProperties:
            type: integer
            format: int64
        pathRetryCount:
          type: object
          additionalProperties:
            type: integer
            format: int64
        migrationPathsRequeued:
          type: object
          additionalProperties:
            type: integer
            format: int64
        scannerProgress:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ScannerProgressMatrix'
        averageFailedPaths:
          type: integer
          format: int64
        averagePendingRegions:
          type: integer
          format: int64
        averagePathRetries:
          type: integer
          format: int64
        totalPendingRegions:
          type: integer
          format: int64
        totalFailedPaths:
          type: integer
          format: int64
        totalPathRetryCount:
          type: integer
          format: int64
      allOf:
      - $ref: '#/components/schemas/Diagnostic'
    NetworkStatus:
      type: object
      properties:
        uid:
          type: integer
          format: int64
        connections:
          type: array
          items:
            $ref: '#/components/schemas/NetworkConnection'
        connectionTotals:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RxTxTotals'
        countTcpStates:
          type: object
          additionalProperties:
            type: integer
            format: int32
      allOf:
      - $ref: '#/components/schemas/Diagnostic'
    ThreadDumpDiagnostic:
      type: object
      properties:
        threads:
          type: array
          items:
            $ref: '#/components/schemas/ThreadInfo'
        timeToCollect:
          type: integer
          format: int64
        threadStateSummary:
          $ref: '#/components/schemas/ThreadStates'
      allOf:
      - $ref: '#/components/schemas/Diagnostic'
    ThroughputDiagnostic:
      type: object
      properties:
        period:
          type: integer
          format: int64
        bytesMigrated:
          type: integer
          format: int64
        filesMigrated:
          type: integer
          format: int64
        peakBytesMigrated:
          type: integer
          format: int64
        peakFilesMigrated:
          type: integer
          format: int64
      allOf:
      - $ref: '#/components/schemas/Diagnostic'
    DataAgentDiagnosticSummary:
      type: object
      properties:
        uptime:
          type: integer
          format: int64
        fsCacheSize:
          type: integer
          format: int64
        activeTransfersCount:
          type: integer
          format: int64
        grpcPoolSize:
          type: integer
          format: int64
        grpcActiveThreadsCount:
          type: integer
          format: int64
        grpcTaskCount:
          type: integer
          format: int64
        grpcCompletedTaskCount:
          type: integer
          format: int64
        scheduledCallbackActiveThreadsCount:
          type: integer
          format: int64
        scheduledCallbackTaskCount:
          type: integer
          format: int64
        scheduledCallbackCompletedTaskCount:
          type: integer
          format: int64
        scheduledCallbackQueueSize:
          type: integer
          format: int64
      allOf:
      - $ref: '#/components/schemas/Diagnostic'
    VerificationStatus:
      type: string
      enum:
      - QUEUED
      - IN_PROGRESS
      - COMPLETE
      - CANCELLED
    VerificationReportFileDescriptor:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/VerificationReportType'
        fileSuffix:
          type: string
    SourceCleanupReportFileDescriptor:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/SourceCleanupReportType'
        mimeType:
          type: string
    ScannerProgressMatrix:
      type: object
      properties:
        filesScanned:
          type: integer
          format: int64
        directoriesScanned:
          type: integer
          format: int64
        bytesScanned:
          type: integer
          format: int64
        filesExcluded:
          type: integer
          format: int64
        dirsExcluded:
          type: integer
          format: int64
        bytesExcluded:
          type: integer
          format: int64
        baseScanCompletionTime:
          type: string
          format: date-time
      example:
        bytesScanned: 1
        directoriesScanned: 6
        filesExcluded: 5
        bytesExcluded: 2
        dirsExcluded: 5
        baseScanCompletionTime: 2000-01-23T04:56:07.000+00:00
        filesScanned: 0
    RecurringMigrationIteration:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        completeTime:
          type: string
          format: date-time
        iteration:
          type: integer
          format: int32
        durationInSeconds:
          type: integer
          format: int32
      example:
        startTime: 2000-01-23T04:56:07.000+00:00
        completeTime: 2000-01-23T04:56:07.000+00:00
        duration: 10
        iteration: 0
    Pressure:
      type: object
      properties:
        type:
          type: string
        sample:
          type: string
        tenSecond:
          type: number
          format: double
        thirtySecond:
          type: number
          format: double
        sixtySecond:
          type: number
          format: double
        threeHundredSecond:
          type: number
          format: double
    ThreadInfo:
      type: object
      properties:
        threadName:
          type: string
        threadId:
          type: integer
          format: int64
        blockedTime:
          type: integer
          format: int64
        blockedCount:
          type: integer
          format: int64
        waitedTime:
          type: integer
          format: int64
        waitedCount:
          type: integer
          format: int64
        lockName:
          type: string
        lockOwnerId:
          type: integer
          format: int64
        lockOwnerName:
          type: string
        inNative:
          type: boolean
        suspended:
          type: boolean
        threadState:
          type: string
          enum:
          - NEW
          - RUNNABLE
          - BLOCKED
          - WAITING
          - TIMED_WAITING
          - TERMINATED
        stackTrace:
          type: array
          items:
            $ref: '#/components/schemas/ThreadInfo_stackTrace'
    VerificationReportType:
      type: string
      enum:
      - FULL
      - DISCREPANCIES_CSV
      - DISCREPANCIES_JSON
      - SUMMARY
      - ALL
    SourceCleanupReportType:
      type: string
      enum:
      - PARTIAL
      - FULL
    ThreadInfo_stackTrace:
      type: object
      properties:
        methodName:
          type: string
        fileName:
          type: string
        lineNumber:
          type: integer
          format: int32
        declaringClass:
          type: string
        nativeMethod:
          type: boolean
